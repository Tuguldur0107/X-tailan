// src/landingPage/LandingPage.jsx
import React from "react";
import {
  Box, Container, Heading, Text, Button, HStack, VStack, SimpleGrid,
  useColorModeValue, usePrefersReducedMotion, Divider, Badge, Icon,
  Link as CLink, Grid, GridItem, Wrap, WrapItem, Tag, Stack, Center, Kbd,
} from "@chakra-ui/react";
import {
  ArrowRight, Facebook, BarChart3, ShieldCheck, Zap, Lock, Cloud, Server, Check,
  Cpu, Palette, Route, CloudCog, Rocket, Shield, CreditCard,
} from "lucide-react";
import { useNavigate } from "react-router-dom";
import Navbar from "../components/navbar/navbar";
import MotionBox from "../components/MotionBox/MotionBox";

// ---------- Small building blocks ----------
function Tile({ children, as = "div", hover = true, ...rest }) {
  const cardBg = useColorModeValue("bg.card", "bg.card");
  const border = useColorModeValue("border.base", "border.base");
  const prefersReducedMotion = usePrefersReducedMotion();

  return (
    <MotionBox
      as={as}
      tabIndex={0}
      bg={cardBg}
      borderWidth="1px"
      borderColor={border}
      rounded="2xl"
      p={{ base: 4, md: 5 }}
      shadow="elevated"
      position="relative"
      outline="0"
      whileHover={hover && !prefersReducedMotion ? { y: -4, scale: 1.01 } : undefined}
      transition={{ type: "spring", stiffness: 180, damping: 18 }}
      _before={{
        content: '""',
        position: "absolute",
        inset: 0,
        rounded: "2xl",
        padding: "1px",
        bgGradient: "linear(to-br, brand.500, brand.300)",
        opacity: 0,
        transition: "opacity .2s ease",
        WebkitMask:
          "linear-gradient(#000, #000) content-box, linear-gradient(#000, #000)",
        WebkitMaskComposite: "xor",
        pointerEvents: "none",
      }}
      _hover={{ _before: { opacity: 0.7 } }}
      _focusVisible={{ boxShadow: "0 0 0 3px rgba(99,102,241,.35)", _before: { opacity: 0.9 } }}
      {...rest}
    >
      {children}
    </MotionBox>
  );
}

function IconTitle({ icon: I, title, right, gradient = true }) {
  // rainbow headline gradient
  const grad = "linear(to-r, #06B6D4, #6366F1, #A78BFA)";
  return (
    <HStack align="center" justify="space-between" mb={1}>
      <HStack spacing={2}>
        {I && (
          <Center w="38px" h="38px" rounded="xl" borderWidth="1px" borderColor="border.base">
            <Icon as={I} boxSize={5} />
          </Center>
        )}
        <Heading size="sm" {...(gradient ? { bgGradient: grad, bgClip: "text" } : {})}>
          {title}
        </Heading>
      </HStack>
      {right}
    </HStack>
  );
}

// ---------- Page ----------
export default function LandingPage() {
  const nav = useNavigate();
  const prefersReducedMotion = usePrefersReducedMotion();

  const pageBg     = useColorModeValue("bg.page", "bg.page");
  const muted      = useColorModeValue("fg.muted", "fg.muted");
  const border     = useColorModeValue("border.base", "border.base");
  const ringBorder = useColorModeValue("brand.200", "whiteAlpha.400");

  // üåà –∏–ª“Ø“Ø ”©–Ω–≥”©–ª”©–≥ —Å–æ–ª–æ–Ω–≥–æ—Ä—Å–æ–Ω –≥—Ä–∞–¥–∏–µ–Ω—Ç—É—É–¥
  const gradMain = "linear(to-r, #22D3EE, #60A5FA, #A78BFA)";
  const gradSub  = "linear(to-r, #22D3EE, #60A5FA, #A78BFA)";

  // ... –±—É—Å–∞–¥ const-—É—É–¥—ã–Ω –¥–æ—Ä
  const techItems = [
    { icon: Cpu,    title: "React 18",        desc: "Concurrent, StrictMode." },
    { icon: Palette,title: "Chakra UI",       desc: "Theme-—Ç—ç–π, responsive." },
    { icon: Route,  title: "React Router v7", desc: "Route tree, lazy." },
    { icon: Cloud,  title: "Axios",           desc: "Interceptors, retry." },
  ];

  const stepLines = [
    "eTax, facebook –∞–∫–∫–∞—É–Ω—É—É–¥–∞–∞ —Ö–æ–ª–±–æ–∂ –±“Ø—Ä—Ç–≥“Ø“Ø–ª—ç—Ö.",
    "–û–ª–æ–Ω –∫–æ–º–ø–∞–Ω–∏—Ç–∞–π –±–æ–ª –∞–ª—å –∫–æ–º–ø–∞–Ω–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —É–¥–∏—Ä–¥—É—É–ª–∞—Ö—ã–≥ —Å–æ–Ω–≥–æ–Ω–æ.",
    "–°–∏—Å—Ç–µ–º —Ç–∞–Ω–∞–π –∫–æ–º–ø–∞–Ω–∏–π–Ω —Ç–∞–π–ª–∞–Ω–≥–∏–π–Ω —Ç”©–ª”©–≤–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —Ö—è–Ω–∞–∂ –±–∞–π–¥–∞–≥.",
    "–•—É—É–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ —Ç–∞–Ω—ã ”©–º–Ω”©”©—Å —Ç–∞–π–ª–∞–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç–Ω—ç.",
    "–ê–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω–∏–π–≥ Facebook Messenger-—Ä —à—É—É–¥ –º—ç–¥—ç–≥–¥—ç–Ω—ç.",
  ];

  const securityItems = [
    { icon: Lock,        title: "–ù—É—É—Ü “Ø–≥ —Ö–∞–¥–≥–∞–ª–∞—Ö–≥“Ø–π",    desc: "eTax –Ω—É—É—Ü “Ø–≥–∏–π–≥ —Ö–∞–¥–≥–∞–ª–¥–∞–≥–≥“Ø–π, —Ç–æ–∫–µ–Ω—ã–≥ —Ç“Ø—Ä —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ —à–∏—Ñ—Ä–ª—ç–∂ –∞—à–∏–≥–ª–∞–Ω–∞." },
    { icon: ShieldCheck, title: "AES-256 —à–∏—Ñ—Ä–ª—ç–ª—Ç",       desc: "etax –Ω—ç—Ä, ent_id –∑—ç—Ä—ç–≥ —ç–º–∑—ç–≥ ”©–≥”©–≥–¥–ª–∏–π–≥ PostgreSQL –¥—ç—ç—Ä AES-256-–∞–∞—Ä —à–∏—Ñ—Ä–ª—ç–Ω—ç." },
    { icon: ShieldCheck, title: "–ù—ç–≤—Ç—Ä—ç–ª—Ç–∏–π–Ω —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç", desc: "Rate limit, 2FA, reCAPTCHA –∑—ç—Ä—ç–≥ —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç—ã–≥ —à–∞—Ç –¥–∞—Ä–∞–∞—Ç–∞–π –Ω—ç–≤—Ç—Ä“Ø“Ø–ª–Ω—ç." },
    { icon: Check,       title: "–ù—É—É—Ü–ª–∞–ª—ã–Ω —à–∞–ª–≥–∞–ª—Ç",      desc: "–≠–º–∑—ç–≥ –±–∞–π–¥–ª—ã–Ω —Å–∫–∞–Ω, pen-test, Privacy Policy —Ö—ç—Ä—ç–≥–∂“Ø“Ø–ª—ç–ª—Ç." },
  ];

  return (
    <Box bg={pageBg} minH="100dvh">
      <Container maxW="7xl" px={{ base: 4, md: 8 }}>
        <Navbar />

        {/* HERO mosaic (–∂–∏–∂–∏–≥ –±–æ–ª–æ–º–∂—É—É–¥ + —Ç”©–≤ —Å–∞–º–±–∞—Ä + CHIP –°–¢–ï–ö) */}
        <Stack direction={{ base: "column", lg: "row" }} spacing={6} pt={{ base: 8, md: 12 }} pb={{ base: 8, md: 10 }}>
          <Grid templateColumns={{ base: "repeat(6, 1fr)", lg: "repeat(8, 1fr)" }} gap={4} flex="1">
            {/* –∂–∏–∂–∏–≥ –ø–ª–∏—Ç—É—É–¥ */}
            <GridItem colSpan={{ base: 3, lg: 2 }}>
              <Tile><IconTitle icon={Rocket} title="–ê–≤—Ç–æ–º–∞—Ç –∞–∂–∏–ª–ª–∞–≥–∞–∞" gradient />
                <Text color={muted} fontSize="sm">–¢–∞–π–ª–∞–Ω–≥ —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –Ω—å <Kbd>auto</Kbd> –∏–ª–≥—ç—ç–Ω—ç.</Text>
              </Tile>
            </GridItem>
            <GridItem colSpan={{ base: 3, lg: 2 }}>
              <Tile><IconTitle icon={Shield} title="–•–∞–º–≥–∞–∞–ª–∞–ª—Ç" gradient />
                <Text color={muted} fontSize="sm">AES-256, 2FA, rate limit.</Text>
              </Tile>
            </GridItem>
            <GridItem colSpan={{ base: 3, lg: 2 }}>
              <Tile><IconTitle icon={CloudCog} title="Cloud –¥—ç–¥ –±“Ø—Ç—ç—Ü" gradient />
                <Text color={muted} fontSize="sm">Railway –∫–ª–∞—É–¥, —Ç–∞—Å—Ä–∞–ª—Ç–≥“Ø–π –∞–∂–∏–ª–ª–∞–≥–∞–∞.</Text>
              </Tile>
            </GridItem>
            <GridItem colSpan={{ base: 3, lg: 2 }}>
              <Tile><IconTitle icon={CreditCard} title="QPay —Ç”©–ª–±”©—Ä" gradient />
                <Text color={muted} fontSize="sm">–•—è–ª–±–∞—Ä, –∞—é—É–ª–≥“Ø–π —Ü—ç–Ω—ç–≥–ª—ç–ª—Ç.</Text>
              </Tile>
            </GridItem>

            {/* —Ç”©–≤ —Å–∞–º–±–∞—Ä */}
            <GridItem colSpan={{ base: 6, lg: 8 }}>
              <Tile p={{ base: 5, md: 8 }} hover={false}>
                <VStack spacing={4}>
                  <Heading size={{ base: "lg", md: "xl" }} textAlign="center" lineHeight={1.2}>
                    X —Ç–∞–π–ª–∞–Ω–≥–∞–∞ –º–∞—Ä—Ç,{" "}
                    <Text as="span" bgClip="text" bgGradient={gradMain}>X-SENDER-–∏–π–≥ –∞–∂–∏–ª–ª—É—É–ª</Text>
                  </Heading>
                  <Text textAlign="center" bgGradient={gradSub} bgClip="text" maxW="3xl">
                    –¢–∞–Ω—ã ”©–º–Ω”©”©—Å X —Ç–∞–π–ª–∞–Ω–≥ —Ö—É—É–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç–Ω—ç
                  </Text>
                  <HStack spacing={3} wrap="wrap" justify="center">
                    {/* –ù–≠–í–¢–†–≠–• CTA */}
                    <Button
                      size="lg"
                      variant="cta"
                      role="group"            // group hover –∞—à–∏–≥–ª–∞—Ö—ã–Ω —Ç—É–ª–¥
                      onClick={() => nav("/login")}
                    >
                      <HStack spacing={2}>
                        <Text>–°–∏—Å—Ç–µ–º–¥ –Ω—ç–≤—Ç—Ä—ç—Ö</Text>
                        <Icon
                          as={ArrowRight}
                          boxSize={5}
                          transition="transform .2s ease"
                          _groupHover={{ transform: "translateX(4px)" }}
                        />
                      </HStack>
                    </Button>

                    {/* FACEBOOK STYLE */}
                    <Button
                      size="lg"
                      variant="facebook"      // —ç—Å–≤—ç–ª "facebookOutline" —Ö—ç—Ä–≤—ç—ç —Ç–∏–π–º variant –Ω—ç–º—Å—ç–Ω –±–æ–ª
                      leftIcon={<Facebook size={18} />}
                      as={CLink}
                      href="https://www.facebook.com/profile.php?id=61578621497518"
                      isExternal
                    >
                      Facebook Page
                    </Button>
                  </HStack>


                  {/* —Å—Ç–µ–∫ CHIP-“Ø“Ø–¥ ‚Äî –∑”©–≤—Ö”©–Ω —ç–Ω–¥ –Ω—ç–≥ —É–¥–∞–∞ */}
                  {/* <Wrap justify="center" spacing={3} pt={2}>
                    {["React 18","Chakra UI","React Router v7","Axios","Framer Motion","Lucide Icons","Railway Cloud","eTax API"].map((t) => (
                      <WrapItem key={t}>
                        <Tag
                          rounded="full" px={4} py={2}
                          variant="subtle"
                          bg={chipBg}
                          color={chipColor}
                          transition="all .2s"
                          _hover={{
                            transform: prefersReducedMotion ? undefined : "translateY(-2px)",
                            boxShadow: chipHover,
                          }}
                        >
                          {t}
                        </Tag>
                      </WrapItem>
                    ))}
                  </Wrap> */}
                </VStack>
              </Tile>
            </GridItem>

            {/* ‚ö†Ô∏è –î–∞–≤—Ö–∞—Ä–¥–∞–ª –∞—Ä–∏–ª–≥–∞—Ö—ã–Ω —Ç—É–ª–¥ –¥–æ–æ—Ä—Ö ‚ÄúReact/Chakra/Router/Axios‚Äù –∂–∏–∂–∏–≥ –ø–ª–∏—Ç—É—É–¥—ã–≥ –ê–í–°–ê–ù */}
          </Grid>
        </Stack>

        {/* ABOUT */}
        <Tile as={Box} p={{ base: 6, md: 8 }} mb={10}>
          <Heading size="lg" textAlign="center" mb={3} bgGradient={gradMain} bgClip="text">
            X-SENDER –≥—ç–∂ —é—É –≤—ç?
          </Heading>
          <Text fontSize="lg" color={muted} textAlign="center" maxW="4xl" mx="auto">
            <Text as="span" fontWeight="semibold" color="brand.500">X-SENDER</Text>{" "}
            –Ω—å –ú–æ–Ω–≥–æ–ª—ã–Ω –ê–ê–ù-—É—É–¥—ã–Ω –• —Ç–∞–π–ª–∞–Ω–≥ <Text as="span" fontWeight="semibold">–∞–ª–±–∞–Ω —ë—Å–Ω—ã eTax API</Text>{" "}
            –∞—à–∏–≥–ª–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä, –∞–ª–¥–∞–∞–≥“Ø–π, —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –Ω—å –∏–ª–≥—ç—ç—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º. Messenger chatbot + Web App —Ö–æ—Å–æ–ª—Å–æ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ç—ç—Ä
            —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ —ç–Ω–≥–∏–π–Ω, —Ö—É—Ä–¥–∞–Ω, –Ω–∞–π–¥–≤–∞—Ä—Ç–∞–π “Ø–π–ª—á–∏–ª–≥—ç—ç –∞–≤–Ω–∞.
          </Text>
        </Tile>

        {/* HOW IT WORKS (–∑“Ø“Ø–Ω) + PRICING (–±–∞—Ä—É—É–Ω) */}
        <Grid templateColumns={{ base: "1fr", lg: "1fr 420px" }} gap={6} alignItems="start" mb={12}>
          {/* LEFT: how it works */}
          <Box>
            <Heading size="lg" mb={4} bgGradient={gradMain} bgClip="text">–•—ç—Ä—Ö—ç–Ω –∞–∂–∏–ª–ª–∞–¥–∞–≥ –≤—ç?</Heading>
            <VStack spacing={4} align="stretch">
              {["–ù—ç–≤—Ç—Ä—ç—Ö","–ö–æ–º–ø–∞–Ω–∏–π–Ω —Å–æ–Ω–≥–æ–ª—Ç","–¢–∞–π–ª–∞–Ω–≥–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç","–ê–≤—Ç–æ–º–∞—Ç –∏–ª–≥—ç—ç—Ö","–ú—ç–¥—ç–≥–¥—ç–ª"].map((title, idx) => (
                <Tile key={idx} p={6} position="relative">
                  <Box
                    position="absolute" left={4} top={4} w="42px" h="42px"
                    rounded="full" bgGradient="linear(to-br, brand.500, brand.700)" color="white"
                    display="flex" alignItems="center" justifyContent="center"
                    fontWeight="bold" fontSize="md" boxShadow="0 8px 16px rgba(99,102,241,.35)"
                    _after={{ content: '""', position: "absolute", inset: "-4px", rounded: "full",
                      border: "2px solid", borderColor: ringBorder }}
                  >
                    {idx + 1}
                  </Box>
                  <VStack align="start" pl="60px" spacing={1}>
                    <Heading size="md">{title}</Heading>
                    <Text bgGradient={gradSub} bgClip="text">{stepLines[idx]}</Text>
                  </VStack>
                </Tile>
              ))}
            </VStack>
          </Box>

          {/* RIGHT: pricing */}
          <Box>
            <Heading size="lg" mb={4} textAlign="left" bgGradient={gradMain} bgClip="text">“Æ–Ω—ç —Ç”©–ª–±”©—Ä</Heading>
            <Tile as={Box} p={{ base: 6, md: 8 }}>
              {/* <HStack justify="space-between" mb={3}>
                <Heading size="md" color="brand.600">–°—Ç–∞–Ω–¥–∞—Ä—Ç</Heading>
                <Badge colorScheme="brand" variant="subtle" rounded="full" px={3}>–•–∞–º–≥–∏–π–Ω –∏—Ö –∞—à–∏–≥–ª–∞–≥–¥–¥–∞–≥</Badge>
              </HStack> */}
              <HStack align="baseline" spacing={2} mb={2} justify="center">
                <Heading size="2xl" lineHeight={1} bgGradient={gradMain} bgClip="text">5,000‚ÇÆ</Heading>
                <Text opacity={0.85}>/ —Ç–∞–π–ª–∞–Ω</Text>
              </HStack>
              {/* <Text color={muted} mb={4}>–î–∞—Ä–∞–∞—Ö –Ω”©—Ö—Ü”©–ª—Ç—ç–π–≥—ç—ç—Ä —ç–Ω–≥–∏–π–Ω, –æ–π–ª–≥–æ–º–∂—Ç–æ–π —Ç–∞—Ä–∏—Ñ.</Text> */}
              <VStack align="start" spacing={3} color={muted}>
                <HStack><Icon as={Check} color="green.500" /><Text>–®–∏–Ω—ç —Ö—ç—Ä—ç–≥–ª—ç–≥—á –±“Ø—Ä—Ç —ç—Ö–Ω–∏–π 3 —Ç–∞–π–ª–∞–Ω “Ø–Ω—ç–≥“Ø–π </Text></HStack>
                <HStack><Icon as={Check} color="green.500" /><Text>–¶—ç–Ω—ç–≥–ª—ç—Ö –¥–æ–æ–¥ –¥“Ø–Ω: <b>50,000‚ÇÆ</b> </Text></HStack>
                <HStack><Icon as={Check} color="green.500" /><Text>–£—è–Ω —Ö–∞—Ç–∞–Ω –∑–∞—Ä—Ü—É—É–ª–∞–ª—Ç ‚Äî —Ç–∞–π–ª–∞–Ω –±“Ø—Ä—Ç 5,000‚ÇÆ —Å—É—É—Ç–Ω–∞</Text></HStack>
                <HStack><Icon as={Check} color="green.500" /><Text>QPay-—ç—ç—Ä –∞—é—É–ª–≥“Ø–π —Ç”©–ª–±”©—Ä —Ç–æ–æ—Ü–æ–æ</Text></HStack>
              </VStack>
              <Button mt={6} size="md" colorScheme="brand" leftIcon={<Icon as={Check} />} w="full"
                onClick={() => nav("/payment")}
                _hover={{ transform: prefersReducedMotion ? undefined : "translateY(-2px)" }}>
                QPay-—ç—ç—Ä —Ü—ç–Ω—ç–≥–ª—ç—Ö
              </Button>
            </Tile>
          </Box>
        </Grid>

        {/* ‚úÖ –ó“Ø“Ø–Ω ‚Äî –¢–µ—Ö–Ω–æ–ª–æ–≥–∏ / –ë–∞—Ä—É—É–Ω ‚Äî –ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª (–∏–∂–∏–ª –¥–∏–∑–∞–π–Ω) */}
        <Grid templateColumns={{ base: "1fr", lg: "1fr 1fr" }} gap={6} alignItems="start" mb={12}>
          {/* LEFT: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏ */}
          <Box>
            <Heading size="lg" mb={4} bgGradient={gradMain} bgClip="text">
              –¢–µ—Ö–Ω–æ–ª–æ–≥–∏
            </Heading>
            <SimpleGrid columns={{ base: 1, md: 2 }} gap={4}>
              {techItems.map((t) => (
                <Tile key={t.title}>
                  <IconTitle icon={t.icon} title={t.title} gradient />
                  <Text color={muted}>{t.desc}</Text>
                </Tile>
              ))}
            </SimpleGrid>
          </Box>

          {/* RIGHT: –ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª */}
          <Box>
            <Heading size="lg" mb={4} bgGradient={gradMain} bgClip="text">
              –ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª
            </Heading>
            <SimpleGrid columns={{ base: 1, md: 2 }} gap={4}>
              {securityItems.map((f) => (
                <Tile key={f.title}>
                  <IconTitle icon={f.icon} title={f.title} gradient />
                  <Text color={muted}>{f.desc}</Text>
                </Tile>
              ))}
            </SimpleGrid>
          </Box>
        </Grid>


        {/* FOOTER */}
        <VStack as="footer" py={10} spacing={2} opacity={0.9}>
          <Divider />
          <HStack><Heading size="sm">X-Sender</Heading><Badge colorScheme="brand">beta</Badge></HStack>
          <CLink href="mailto:hello@x-sender.mn" fontSize="sm">hello@x-sender.mn</CLink>
        </VStack>
      </Container>
    </Box>
  );
}
