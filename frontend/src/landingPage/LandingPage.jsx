import React from "react";
import {
  Box,
  Container,
  Heading,
  Text,
  Button,
  HStack,
  VStack,
  SimpleGrid,
  useColorModeValue,
  Divider,
  Badge,
  Icon,
  Link as CLink,
  Grid,
  GridItem,
  Wrap,
  WrapItem,
  Tag,
} from "@chakra-ui/react";
import {
  ArrowRight,
  Facebook,
  BarChart3,
  ShieldCheck,
  Zap,
  Lock,
  Cloud,
  Server,
  Check,
} from "lucide-react";
import Navbar from "../components/navbar/navbar";
import { useNavigate } from "react-router-dom";

/** Reusable card-style feature */
function Feature({ icon, title, desc }) {
  const cardBg = useColorModeValue("white", "whiteAlpha.50");
  const border = useColorModeValue("gray.200", "whiteAlpha.200");
  const text = useColorModeValue("gray.700", "gray.300");
  return (
    <VStack
      align="start"
      p={6}
      rounded="xl"
      borderWidth="1px"
      spacing={2}
      borderColor={border}
      bg={cardBg}
    >
      <HStack>
        <Icon as={icon} />
        <Heading size="sm">{title}</Heading>
      </HStack>
      <Text fontSize="sm" color={text}>{desc}</Text>
    </VStack>
  );
}

/** Tile for emoji steps (to keep hooks at top-level of a component) */
function StepTile({ emoji, title, desc }) {
  const cardBg = useColorModeValue("white", "whiteAlpha.50");
  const border = useColorModeValue("gray.200", "whiteAlpha.200");
  const text = useColorModeValue("gray.700", "gray.300");
  return (
    <VStack
      align="start"
      p={6}
      bg={cardBg}
      borderWidth="1px"
      borderColor={border}
      rounded="xl"
      shadow="sm"
    >
      <Text fontSize="3xl">{emoji}</Text>
      <Heading size="md">{title}</Heading>
      <Text color={text}>{desc}</Text>
    </VStack>
  );
}

/** Numbered timeline item */
function StepLine({ index, title, desc }) {
  const cardBg = useColorModeValue("white", "whiteAlpha.100");
  const border = useColorModeValue("gray.200", "whiteAlpha.200");
  const text = useColorModeValue("gray.700", "gray.300");
  return (
    <GridItem
      p={6}
      bg={cardBg}
      borderLeftWidth="4px"
      borderLeftColor="brand.500"
      borderWidth="1px"
      borderColor={border}
      rounded="xl"
      shadow="sm"
      position="relative"
      pl={14}
    >
      <Box
        position="absolute"
        left={4}
        top={6}
        w={10}
        h={10}
        rounded="full"
        bg="brand.600"
        color="white"
        display="flex"
        alignItems="center"
        justifyContent="center"
        fontWeight="bold"
        shadow="md"
      >
        {index}
      </Box>
      <Heading size="md" mb={1}>{title}</Heading>
      <Text color={text}>{desc}</Text>
    </GridItem>
  );
}

export default function LandingPage() {
  const nav = useNavigate();

  // Top-level color values (safe for hooks)
  const bg = useColorModeValue("gray.50", "gray.900");
  const cardBgMain = useColorModeValue("white", "whiteAlpha.100");
  const borderMain = useColorModeValue("gray.200", "whiteAlpha.200");
  const muted = useColorModeValue("gray.700", "gray.300");

  const stepTiles = [
    { title: "–ù—ç–≤—Ç—Ä—ç—Ö", desc: "Messenger —á–∞—Ç–±–æ—Ç–æ–æ—Ä ”©”©—Ä–∏–π–Ω eTax –∞–∫–∫–∞—É–Ω—Ç–∞–∞—Ä –Ω—ç–≥ —É–¥–∞–∞ –Ω—ç–≤—Ç—ç—Ä–Ω—ç.", emoji: "üîë" },
    { title: "–ö–æ–º–ø–∞–Ω–∏–π–Ω —Å–æ–Ω–≥–æ–ª—Ç", desc: "–û–ª–æ–Ω –∫–æ–º–ø–∞–Ω–∏—Ç–∞–π –±–æ–ª –∞–ª—å –∫–æ–º–ø–∞–Ω–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —É–¥–∏—Ä–¥—É—É–ª–∞—Ö—ã–≥ —Å–æ–Ω–≥–æ–Ω–æ.", emoji: "üè¢" },
    { title: "–¢–∞–π–ª–∞–Ω–≥–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç", desc: "–°–∏—Å—Ç–µ–º —Ç–∞–Ω–∞–π –∫–æ–º–ø–∞–Ω–∏–π–Ω —Ç–∞–π–ª–∞–Ω–≥–∏–π–Ω —Ç”©–ª”©–≤–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —Ö—è–Ω–∞–∂ –±–∞–π–¥–∞–≥.", emoji: "üìã" },
    { title: "–ê–≤—Ç–æ–º–∞—Ç –∏–ª–≥—ç—ç—Ö", desc: "–•—É—É–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ —Ç–∞–Ω—ã ”©–º–Ω”©”©—Å —Ç–∞–π–ª–∞–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç–Ω—ç.", emoji: "üöÄ" },
    { title: "–ú—ç–¥—ç–≥–¥—ç–ª", desc: "–ê–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω–∏–π–≥ Facebook Messenger-—Ä —à—É—É–¥ –º—ç–¥—ç–≥–¥—ç–Ω—ç.", emoji: "üì©" },
  ];

  const stepLines = [
    "Messenger —á–∞—Ç–±–æ—Ç–æ–æ—Ä ”©”©—Ä–∏–π–Ω eTax –∞–∫–∫–∞—É–Ω—Ç–∞–∞—Ä –Ω—ç–≥ —É–¥–∞–∞ –Ω—ç–≤—Ç—ç—Ä–Ω—ç.",
    "–û–ª–æ–Ω –∫–æ–º–ø–∞–Ω–∏—Ç–∞–π –±–æ–ª –∞–ª—å –∫–æ–º–ø–∞–Ω–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —É–¥–∏—Ä–¥—É—É–ª–∞—Ö—ã–≥ —Å–æ–Ω–≥–æ–Ω–æ.",
    "–°–∏—Å—Ç–µ–º —Ç–∞–Ω–∞–π –∫–æ–º–ø–∞–Ω–∏–π–Ω —Ç–∞–π–ª–∞–Ω–≥–∏–π–Ω —Ç”©–ª”©–≤–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —Ö—è–Ω–∞–∂ –±–∞–π–¥–∞–≥.",
    "–•—É—É–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ —Ç–∞–Ω—ã ”©–º–Ω”©”©—Å —Ç–∞–π–ª–∞–Ω–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç–Ω—ç.",
    "–ê–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω–∏–π–≥ Facebook Messenger-—Ä —à—É—É–¥ –º—ç–¥—ç–≥–¥—ç–Ω—ç.",
  ];

  return (
    <Box minH="100dvh" bg={bg}>
      <Container maxW="6xl">
        {/* Top nav */}
        <Navbar />

        {/* Hero */}
        <VStack pt={{ base: 10, md: 20 }} pb={{ base: 10, md: 16 }} spacing={6} textAlign="center">
          <Heading size={{ base: "xl", md: "2xl" }} lineHeight={1.2}>
            X —Ç–∞–π–ª–∞–Ω–≥–∞–∞ –º–∞—Ä—Ç,
            <br />
            <Text as="span" color="brand.400">X-SENDER-–∏–π–≥ –∞–∂–∏–ª–ª—É—É–ª</Text>
          </Heading>
          <Text fontSize={{ base: "md", md: "lg" }} maxW="760px">
            –¢–∞–Ω—ã ”©–º–Ω”©”©—Å X —Ç–∞–π–ª–∞–Ω–≥ —Ö—É—É–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç–Ω—ç
          </Text>

          <HStack>
            <Button size="lg" colorScheme="brand" rightIcon={<ArrowRight size={18} />} onClick={() => nav("/login")}>
              –°–∏—Å—Ç–µ–º–¥ –Ω—ç–≤—Ç—Ä—ç—Ö
            </Button>
            <Button
              size="lg"
              variant={useColorModeValue("outline", "solid")}
              leftIcon={<Facebook size={18} />}
              onClick={() => window.open("https://www.facebook.com/profile.php?id=61578621497518", "_blank")}
            >
              Facebook Page
            </Button>
          </HStack>
        </VStack>

        {/* About */}
        <Box bg={cardBgMain} borderWidth="1px" borderColor={borderMain} p={{ base: 6, md: 10 }} rounded="2xl" shadow="md" mb={16}>
          <Heading size="lg" textAlign="center" mb={4}>X-SENDER –≥—ç–∂ —é—É –≤—ç?</Heading>
          <Text fontSize="lg" color={muted}>
            <Text as="span" fontWeight="semibold" color="brand.500">X-SENDER</Text> –Ω—å –ú–æ–Ω–≥–æ–ª—ã–Ω –ê–ê–ù-—É—É–¥—ã–Ω –• —Ç–∞–π–ª–∞–Ω–≥{" "}
            <Text as="span" fontWeight="semibold">–∞–ª–±–∞–Ω —ë—Å–Ω—ã eTax API</Text> –∞—à–∏–≥–ª–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä, –∞–ª–¥–∞–∞–≥“Ø–π, —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –Ω—å –∏–ª–≥—ç—ç—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º.
            Messenger chatbot + Web App —Ö–æ—Å–æ–ª—Å–æ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ç—ç—Ä —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ —ç–Ω–≥–∏–π–Ω, —Ö—É—Ä–¥–∞–Ω, –Ω–∞–π–¥–≤–∞—Ä—Ç–∞–π “Ø–π–ª—á–∏–ª–≥—ç—ç –∞–≤–Ω–∞.
          </Text>
        </Box>

        {/* How it works ‚Äì tiles */}
        <Box mb={16}>
          <Heading size="lg" textAlign="center" mb={8}>–•—ç—Ä—Ö—ç–Ω –∞–∂–∏–ª–ª–∞–¥–∞–≥ –≤—ç?</Heading>
          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={6}>
            {stepTiles.map((s, i) => <StepTile key={i} {...s} />)}
          </SimpleGrid>
        </Box>

        {/* How it works ‚Äì numbered timeline */}
        <Box mb={16}>
          <Grid templateColumns={{ base: "1fr", md: "1fr" }} gap={6}>
            {["–ù—ç–≤—Ç—Ä—ç—Ö","–ö–æ–º–ø–∞–Ω–∏–π–Ω —Å–æ–Ω–≥–æ–ª—Ç","–¢–∞–π–ª–∞–Ω–≥–∏–π–Ω –∂–∞–≥—Å–∞–∞–ª—Ç","–ê–≤—Ç–æ–º–∞—Ç –∏–ª–≥—ç—ç—Ö","–ú—ç–¥—ç–≥–¥—ç–ª"]
              .map((title, idx) => (
                <StepLine key={idx} index={idx + 1} title={title} desc={stepLines[idx]} />
            ))}
          </Grid>
        </Box>

        {/* Value props */}
        <SimpleGrid columns={{ base: 1, md: 3 }} spacing={5} mb={16}>
          <Feature icon={Zap} title="–•—É—Ä–¥—Ç–∞–π" desc="–ü—Ä–æ—Ü–µ—Å—Å–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∂—É—É–ª–∂, 1‚Äì2 –º–∏–Ω—É—Ç–∞–Ω–¥ –±—ç–ª—ç–Ω –±–æ–ª–≥–æ–Ω–æ." />
          <Feature icon={ShieldCheck} title="–ù–∞–π–¥–≤–∞—Ä—Ç–∞–π" desc="–ê–ª–¥–∞–∞–Ω—ã –º–µ–Ω–µ–∂–º–µ–Ω—Ç, –±–∞—Ç–∞–ª–≥–∞–∞–∂—É—É–ª–∞–ª—Ç—Ç–∞–π." />
          <Feature icon={BarChart3} title="”®—Ä–≥”©—Ç–≥”©—Ö –±–æ–ª–æ–º–∂—Ç–æ–π" desc="–î–∞—Ä–∞–∞ –Ω—å –±—É—Å–∞–¥ —Ç–∞–π–ª–∞–Ω, –Ω—ç–≥–∂“Ø“Ø–¥–∏–π–≥ —Ö–æ–ª–±–æ—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä." />
        </SimpleGrid>

        {/* Pricing */}
        <Box bg={cardBgMain} borderWidth="1px" borderColor={borderMain} rounded="2xl" shadow="lg" p={{ base: 6, md: 10 }} mb={16}>
          <Heading size="lg" textAlign="center" mb={3}>“Æ–Ω—ç —Ç”©–ª–±”©—Ä</Heading>
          <Text textAlign="center" color={muted} mb={8}>
            X —Ç–∞–π–ª–∞–Ω–≥ –∞–ª–¥–∞–∞–≥“Ø–π, –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –∏–ª–≥—ç—ç—Ö —É—Ö–∞–∞–ª–∞–≥ “Ø–π–ª—á–∏–ª–≥—ç—ç–≥ —Ö—è–º–¥ “Ø–Ω—ç—ç—Ä –∞—à–∏–≥–ª–∞–∞—Ä–∞–π.
          </Text>

          <Box maxW="2xl" mx="auto" p={8} bg={useColorModeValue("white", "whiteAlpha.50")} borderWidth="1px"
               borderColor={borderMain} rounded="2xl" shadow="md">
            <Heading size="md" color="brand.600" mb={4}>5,000‚ÇÆ / —Ç–∞–π–ª–∞–Ω</Heading>
            <VStack align="start" spacing={4} color={muted}>
              <Text><Text as="span" color="green.600" fontWeight="semibold">‚úÖ –≠—Ö–Ω–∏–π 3 —Ç–∞–π–ª–∞–Ω “Ø–Ω—ç–≥“Ø–π:</Text> –®–∏–Ω—ç—ç—Ä –±“Ø—Ä—Ç–≥“Ø“Ø–ª—Å—ç–Ω —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–¥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –Ω—ç—ç–≥–¥—ç–Ω—ç.</Text>
              <Text><Text as="span" color="blue.600" fontWeight="semibold">üí≥ –¶—ç–Ω—ç–≥–ª—ç—Ö –¥“Ø–Ω:</Text> –•–∞–º–≥–∏–π–Ω –±–∞–≥–∞–¥–∞–∞ <b>50,000‚ÇÆ</b> –±—É—é—É 10 —Ç–∞–π–ª–∞–Ω–≥–∏–π–Ω —ç—Ä—Ö—ç—ç—Ä QPay-—Ä —Ü—ç–Ω—ç–≥–ª—ç–Ω—ç.</Text>
              <Text><Text as="span" color="purple.600" fontWeight="semibold">üìä –£—è–Ω —Ö–∞—Ç–∞–Ω –∑–∞—Ä—Ü—É—É–ª–∞–ª—Ç:</Text> –¢–∞–π–ª–∞–Ω –±“Ø—Ä—Ç 5,000‚ÇÆ —Ö–∞—Å–∞–≥–¥–∞–∂, “Ø–ª–¥—ç–≥–¥—ç–ª —Ç–∞–Ω—å –∫—Ä–µ–¥–∏—Ç —Ö—ç–ª–±—ç—Ä—ç—ç—Ä —Ö–∞–¥–≥–∞–ª–∞–≥–¥–∞–Ω–∞.</Text>
            </VStack>
            <Button mt={8} size="md" colorScheme="brand" leftIcon={<Icon as={Check} />} onClick={() => nav("/payment")}>
              QPay-—ç—ç—Ä —Ü—ç–Ω—ç–≥–ª—ç—Ö
            </Button>
          </Box>
        </Box>

        {/* Security */}
        <Box mb={16}>
          <Heading size="lg" textAlign="center" mb={8}>–ê—é—É–ª–≥“Ø–π –±–∞–π–¥–∞–ª</Heading>
          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={6}>
            <Feature icon={Lock} title="–ù—É—É—Ü “Ø–≥ —Ö–∞–¥–≥–∞–ª–∞—Ö–≥“Ø–π" desc="eTax –Ω—É—É—Ü “Ø–≥–∏–π–≥ —Ö–∞–¥–≥–∞–ª–¥–∞–≥–≥“Ø–π, —Ç–æ–∫–µ–Ω—ã–≥ —Ç“Ø—Ä —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ —à–∏—Ñ—Ä–ª—ç–∂ –∞—à–∏–≥–ª–∞–Ω–∞." />
            <Feature icon={ShieldCheck} title="AES-256 —à–∏—Ñ—Ä–ª—ç–ª—Ç" desc="etax –Ω—ç—Ä, ent_id –∑—ç—Ä—ç–≥ —ç–º–∑—ç–≥ ”©–≥”©–≥–¥–ª–∏–π–≥ PostgreSQL –¥—ç—ç—Ä AES-256-–∞–∞—Ä —à–∏—Ñ—Ä–ª—ç–Ω—ç." />
            <Feature icon={ShieldCheck} title="–ù—ç–≤—Ç—Ä—ç–ª—Ç–∏–π–Ω —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç" desc="Rate limit, 2FA, reCAPTCHA –∑—ç—Ä—ç–≥ —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç—ã–≥ —à–∞—Ç –¥–∞—Ä–∞–∞—Ç–∞–π –Ω—ç–≤—Ç—Ä“Ø“Ø–ª–Ω—ç." />
            <Feature icon={Check} title="–ù—É—É—Ü–ª–∞–ª—ã–Ω —à–∞–ª–≥–∞–ª—Ç" desc="–≠–º–∑—ç–≥ –±–∞–π–¥–ª—ã–Ω —Å–∫–∞–Ω, pen-test, Privacy Policy —Ö—ç—Ä—ç–≥–∂“Ø“Ø–ª—ç–ª—Ç." />
          </SimpleGrid>
        </Box>

        {/* Technology */}
        <Box mb={20}>
          <Heading size="lg" textAlign="center" mb={4}>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–π–Ω —à–∏–π–¥—ç–ª</Heading>
          <Text textAlign="center" mb={10} color={muted}>
            eTax —Å–∏—Å—Ç–µ–º—Ç—ç–π –∞–ª–±–∞–Ω —ë—Å–Ω—ã API-—Ä —Ö–æ–ª–±–æ–≥–¥–æ–∂, –∫–ª–∞—É–¥ –¥—ç–¥ –±“Ø—Ç—ç—Ü –¥—ç—ç—Ä –Ω–∞–π–¥–≤–∞—Ä—Ç–∞–π –∞–∂–∏–ª–ª–∞–Ω–∞.
          </Text>
          <SimpleGrid columns={{ base: 1, md: 2 }} spacing={6} mb={6}>
            <Feature icon={Zap} title="–ê–≤—Ç–æ–º–∞—Ç –∞–∂–∏–ª–ª–∞–≥–∞–∞" desc="–¢–∞–Ω—ã –æ—Ä–æ–ª—Ü–æ–æ–≥“Ø–π–≥—ç—ç—Ä –±“Ø—Ö —É—Ä—Å–≥–∞–ª—ã–≥ –≥“Ø–π—Ü—ç—Ç–≥—ç–Ω—ç." />
            <Feature icon={Cloud} title="Cloud –¥—ç–¥ –±“Ø—Ç—ç—Ü" desc="Railway –∫–ª–∞—É–¥ –¥—ç—ç—Ä —Ç–∞—Å—Ä–∞–ª—Ç–≥“Ø–π –∞–∂–∏–ª–ª–∞–≥–∞–∞—Ç–∞–π." />
            <Feature icon={Server} title="–°“Ø“Ø–ª–∏–π–Ω “Ø–µ–∏–π–Ω —Ñ—Ä–µ–π–º–≤–æ—Ä–∫" desc="Node.js, NestJS, Next.js –∑—ç—Ä—ç–≥ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—É–¥." />
            <Feature icon={ShieldCheck} title="–•–∞–º–≥–∞–∞–ª–∞–ª—Ç" desc="–ù—É—É—Ü–ª–∞–ª, —à–∏—Ñ—Ä–ª—ç–ª—Ç, CI/CD, –ª–æ–≥–∂—É—É–ª–∞–ª—Ç –±“Ø—Ä—ç–Ω." />
          </SimpleGrid>

          <Wrap justify="center" spacing={3}>
            {["Next.js","NestJS","Node.js","PostgreSQL","Docker","Railway","ManyChat","QPay API","eTax API"].map((t) => (
              <WrapItem key={t}><Tag size="md" colorScheme="blue" variant="subtle">{t}</Tag></WrapItem>
            ))}
          </Wrap>
        </Box>

        {/* Footer */}
        <VStack as="footer" py={10} spacing={2} opacity={0.9}>
          <Divider />
          <HStack>
            <Heading size="sm">X-—Ç–∞–π–ª–∞–Ω</Heading>
            <Badge colorScheme="brand">beta</Badge>
          </HStack>
          <Text fontSize="sm">¬© {new Date().getFullYear()} X-—Ç–∞–π–ª–∞–Ω ‚Äî UFE Tech / IO Institute</Text>
          <CLink href="mailto:contact@example.com" fontSize="sm">contact@example.com</CLink>
        </VStack>
      </Container>
    </Box>
  );
}
