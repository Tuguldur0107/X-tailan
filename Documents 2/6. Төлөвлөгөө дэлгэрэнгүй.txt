X-SENDER төслийн бүрэн хэрэгжүүлэлтийн төлөвлөгөө
1. Төслийн товч танилцуулга ба зорилго
X-SENDER нь Монголын аж ахуйн нэгжүүдийн “Х тайлан” – тухайн тайлант хугацаанд орлого, үйл ажиллагаа байхгүйг мэдүүлэх тайлан – илгээх процессыг хялбаршуулж, бүрэн автоматжуулах тусгай платформ юм. Төслийн гол зорилго нь Монголын ААН-үүд шаардлагатай X тайланг е-татвар (eTax) систем рүү албан ёсны API ашиглан шууд, автомат, алдаагүй илгээхэд оршино. Ингэснээр компаниуд сар бүр (эсвэл улирал тутам) хийх ёстой хоосон тайлангуудаа хугацаанд нь марталгүй, хурдан шуурхай дамжуулж, гараар шивэхээс үүдэлтэй алдаа, цагийн гарзыг багасгах юм. Түлхүүр онцлогууд: X-SENDER нь хэд хэдэн шинэлэг шийдэл, давуу тал дээр суурилна:
Албан ёсны eTax API-г ашиглан тайлан илгээнэ (вэб хөтчийг дуурайсан scraping эсвэл Puppeteer автоматжуулалт хэрэглэхгүй).
Facebook Messenger чатбот-оор хэрэглэгчидтэй харилцаж, тайлан илгээх үйлдлийг чат-интерфейстэй хялбар хэлбэрээр гүйцэтгэнэ.
Вэб суурьтай админ панел болон лендинг хуудас бүхий интерфейсийг ашиглана – хэрэглэгч Messenger-ээр эхэлж, цаашдын нарийн үйлдлүүдийг веб апп-д гүйцэтгэх боломжтой.
QPay төлбөрийн систем-ийг нэгтгэн, үйлчилгээний хураамжийг урьдчилсан цэнэглэлтийн байдлаар хялбар төлөх боломжтой.
Илгээх тайлангийн жагсаалтыг автоматаар харуулж, шаардлагатай тайланг нэг товч дарж илгээх үйлдлийг санал болгоно.
Олон компани удирдах боломжтой – нэг хэрэглэгч өөрийн хэд хэдэн компанийн тайланг нэг дороос удирдах, илгээх боломжтой.
Эдгээр онцлогуудын дүнд X-SENDER нь X тайлан илгээх үүрэгтэй байгууллагуудад “тайлангаа мартаж, X-SENDER-ийг ажиллуулах” боломжийг олгож, тайлан илгээх явцыг хөнгөвчлөнө. Зорилтот шийдэж буй асуудал нь цаг хугацаа бардаг, алдаа гаргах өндөр магадлалтай гараар тайлан илгээх ажлыг найдвартай автоматжуулалтаар солих явдал юм.
2. eTax API-ийн интеграцийн нарийвчилсан задаргаа
Монгол улсын Татварын Ерөнхий Газраас eTax цахим тайлангийн системд зориулсан албан ёсны вэб сервисийн API-уудыг хөгжүүлэгчдэд公開лан гаргасан байдаг. X-SENDER систем эдгээр API-уудтай холбогдон нэвтрэлтээс эхлээд тайлан илгээх хүртэлх бүх үйлдлийг гүйцэтгэнэ. Интеграцийн үндсэн бүрэлдэхүүн, дараалал нь:
Аутентификаци (Authentication): eTax систем нь нэгдсэн нэвтрэх (SSO) систем ашигладаг тул хэрэглэгчийн eTax-ийн нэр, нууц үгийг илгээж, тусгай access token (JWT)-ийг auth.itc.gov.mn domain-ээс авна. Энэ token нь цаашдын бүх хүсэлтэнд ашиглагдах бөгөөд HTTP Authorization header-ээр дамжуулна. Token-ийг удаан хадгалахгүй, зөвхөн кэш эсвэл шифрлэсэн санах ойд богино хугацаанд хадгалдаг.
Компанийн ID (ent_id) авах: Нэвтэрсний дараа хэрэглэгчтэй холбоотой байгууллагуудын жагсаалтыг авах API-д хандана. /api/user/getUserOrgs endpoint руу хандахад тухайн хэрэглэгчийн бүх компанийн мэдээлэл, түүний дотор байгууллагын ID буюу ent_id утгууд ирнэ. X-SENDER энэхүү ent_id-ийг санаж, цаашид аль компанийн өмнөөс тайлан илгээхээ тодорхойлохдоо ашигладаг (нэг хэрэглэгч хэд хэдэн компанитай бол сонгох боломжтой).
Тайлангийн жагсаалт авах: Сонгосон компанийн хувьд тухайн үе шатанд илгээх шаардлагатай тайлангуудын жагсаалтыг авах API-г дуудна. (“татвар төлөгчийн тушаах тайлангийн жагсаалт” авах сервис гэж нэрлэгддэг.) Үүний хариуд тухайн компани ямар ямар төрлийн, ямар хугацааны тайлан илгээх ёстойг код, хугацааны хамт өгөгдөнө. Ингэснээр хэрэглэгчид зөв тайланг сонгох, давхардуулж илгээхээс сэргийлэх боломж бүрдэнэ.
Тайлангийн өгөгдөл бэлтгэх: X-SENDER нь X тайлан илгээх үед eTax API-ийн шаардлагад нийцсэн JSON бүтэц бэлтгэнэ. Үүнд тухайн тайлангийн маягтын дугаар (formNo), тайлант хугацаа (он, сар буюу улирал), дээр дурдсан ent_id, мөн тайлангийн төрлөөс хамаарсан санхүүгийн талбарууд багтана. “Х тайлан” буюу орлогогүй тайлангийн хувьд эдгээр санхүүгийн талбаруудыг тэг эсвэл хоосон утгатай явуулж, оронд нь тусгай флаг ашиглана (дараагийн хэсэгт дурдсан).
“X” тайлангийн флаг: Ердийн тайлан илгээх хүсэлтэнд “орлогогүй” эсэхийг тэмдэглэх параметр байдаг. Албан ёсны гарын авлагад “явуулаагүй бол X тайлан илгээнэ. 0-үгүй, 1-тийм” хэмээн заасан нь энэхүү логикийг тайлбарладаг. Өөрөөр хэлбэл JSON хүсэлтэд "isZeroReport": true (эсвэл 1) гэсэн талбарыг нэмснээр тухайн тайланг хоосон, орлогогүй гэдгийг системд мэдэгдэнэ. X-SENDER энэ талбарыг автоматаар тохируулж илгээнэ.
Тайлан илгээх (Submission): Бүх мэдээлэл бүрдсэн бол eTax-ийн тайлан илгээх API-д хандаж JSON payload-ээ илгээнэ. Албан ёсны гарын авлагын дагуу энэ нь магадгүй POST /api/return/submit хаяг байх ба хүсэлтдээ дээрх ent_id, тайлангийн маягт, хугацааг зааж, шаардлагатай бол “X тайлан” флагийг 1 болгож өгнө. X-SENDER-ийн backend энэхүү хүсэлтийг илгээхдээ хэрэглэгчийн өмнөөс авсан access token-ийг HTTP header-т хавсаргана.
Хариу, статусын шалгалт: Тайлан илгээсний дараа eTax API нь амжилтын эсвэл алдааны хариу буцаана. Амжилттай бол ихэвчлэн "SUCCESS" статус эсвэл баталгаажилтын ID ирэх ба алдаа гарвал "ERROR" статус, алдааны код, мэдээлэл ирнэ. X-SENDER энэ хариуг шууд хэрэглэгчид дамжуулж, мөн өөрийн мэдээллийн санд хадгална. Нэмэлтээр, тайлан амжилттай илгээгдсэн эсэхийг давхар баталгаажуулахын тулд тайлангийн жагсаалтыг дахин татаж шалгах аргыг хэрэглэж болно – тухайн хугацааны тайлан жагсаалтаас алга болсон байвал eTax системд амжилттай бүртгэгдсэнийг илтгэнэ.
Дээрх интеграцийн шат бүр eTax системийн албан баримтжуулалтад тулгуурласан. “Цахим тайлангийн системийн вэб сервисийн холболтын гарын авлага” PDF-д нэвтрэх, API замууд, хүсэлтийн бүтэц, параметрүүд (formNo, ent_id, period, isZeroReport гэх мэт) талаар дэлгэрэнгүй тайлбарласан байдаг. X-SENDER-ийн хөгжүүлэлтэд энэхүү гарын авлага, developer.itc.gov.mn портал дээрх материалуудыг ашиглан API-нуудтай найдвартай холболт хийнэ. (Жич: Хэрэв ямар нэг шалтгаанаар албан ёсны API холболт хүндрэлтэй бол Puppeteer зэрэг UI автоматжуулалтын хувилбарыг зөвхөн түр зуурын fallback хэлбэрээр авч үзэх боломжтой. Гэвч үндсэн төлөвлөгөө нь API дээр 100% тулгуурлах юм.)
3. MVP хүрээний бүрэн тодорхойлолт
MVP (Minimum Viable Product) хувилбар нь X-SENDER-ийн цөм үйлдлүүдийг богино хугацаанд бүрэн ажиллахуйц болгон туршихад чиглэнэ. Энэхүү 1-р шатанд дараах компонент, функцүүдийг бүрэн хэрэгжүүлнэ:
eTax Authentication & Company List: Хэрэглэгчээс eTax нэвтрэх мэдээллийг авч, токен үүсгэн хадгалах; тухайн хэрэглэгчийн компанийн жагсаалтыг eTax API-ээр татаж харуулах.
Тайлангийн жагсаалт харах: Сонгосон компанийн хүрээнд илгээх шаардлагатай X тайлангийн жагсаалтыг гаргана (огноо, тайлангийн төрөл гэх мэт).
“X тайлан” илгээх функц: Хэрэглэгчийн сонгосон тайланг eTax API-ээр шууд илгээх боломжтой болгоно. Backend талд дээр тайлбарласан submit сервисийг дуудан, орлогогүй тайлангийн флагийг автоматаар нэмж дамжуулна. Илгээсний дараах амжилт/алдааны хариуг chatbot болон веб интерфэйсээр шууд харуулна.
QPay төлбөрийн интеграци: Үйлчилгээг ашиглан тайлан илгээхэд хураамж төлөх системийг нэвтрүүлнэ. Үүний тулд хэрэглэгч QPay-ээр дансаа урьдчилан цэнэглэх холбоос авах боломжтой, мөн QPay-ээс төлбөр амжилттай орсныг мэдэгдэх webhook-ийг хүлээн авч, X-SENDER хэрэглэгчийн кредитийг нэмэгдүүлдэг болно.
Facebook Messenger чатбот интерфейс: Хэрэглэгчтэй харилцах үндсэн суваг нь Messenger бот байх тул ManyChat дээр урьдчилан тодорхойлсон урсгалуудыг (flows) зохиож, манай backend-тай webhook-ээр холбодог байдлаар хэрэгжүүлнэ. Эхний login, компанийн сонголт, тайлангийн тойм зэрэг энгийн харилцааг бот дээр гүйцэтгэнэ.
Админ самбар (Web Admin Panel): Дотоод хэрэглээнд зориулсан веб үндэслэлтэй админ хуудас хийнэ. Админ хэрэглэгч нэвтэрч орон илгээсэн тайлангийн түүх, системийн логийг харах боломжтой бөгөөд шаардлагатай тохиолдолд тодорхой хэрэглэгчийн тайланг гараар илгээх (trigger хийх) функцтэй байна.
Лог ба мониторинг: MVP шатанд системийн үндсэн лог бичилт, алдааны мэдээлэл цуглуулалтыг хийнэ. Ингэснээр тестийн үеэр гарсан алдааг олж засварлах, цаашид сайжруулахад хэрэгтэй мэдээлэлтэй байх юм. Мөн security-ийн хүрээнд мэдээлэл шифрлэх, токен хадгалах логикийг эхний хувилбарт багтаана.
Дээрх MVP функцүүдийг хөгжүүлж дуусмагц 1–5 тест хэрэглэгчийг оролцуулан eTax руу бодит тайлан амжилттай илгээгдэж байгаа эсэхийг баталгаажуулна. Үр дүн амжилттай байвал MVP хувилбарыг 50–100 хэрэглэгчийн хүрээнд туршилтаар ашиглуулж, анхны хэрэглээний мэдээлэл, санал хүсэлт цуглуулж эхэлнэ. (Тайлбар: MVP шатанд бүх тайлангийн төрөл биш зөвхөн “Х тайлан” илгээх функционал төвлөрнө. Цаашид Phase 3 үед ААНОАТ, НӨАТ зэрэг бусад төрлийн тайланг дэмжихээр төлөвлөсөн байгаа.)
4. Messenger Bot (ManyChat) – Flow Design, Webhook Integration
X-SENDER-ийн хэрэглэгчийн урд талын үндсэн харилцах цонх нь Facebook Messenger дээрх ManyChat бот байна. ManyChat платформыг ашиглан хэрэглэгчтэй харилцах хэд хэдэн үндсэн урсгал (flow)-ыг зохиосон бөгөөд тус бүр нь манай backend-ийн webhook API-тай холбогдож өгөгдөл солилцоно. Ботын flow дизайны гол элементүүдийг дурдвал:
Start / Welcome урсгал: Хэрэглэгч чатботыг эхлэхэд угтах мэндчилгээ, X-SENDER-ийн товч танилцуулга, туршиж үзэх call-to-action товчийг үзүүлнэ. Жишээ нь: “Сайн байна уу, X-SENDER ботод тавтай морил! Тайлан илгээх үйлчилгээг турших бол Эхлэх товчийг дарна уу” гэсэн мессеж, товч илгээгдэнэ.
Нэвтрэх (Login) урсгал: Хэрэглэгчийг eTax системд холбохын тулд ManyChat-ийн User Input элементийг ашиглан eTax-ийн хэрэглэгчийн нэр, нууц үгийг асууна. Хэрэглэгчийн оруулсан мэдээлэл ManyChat-ээс манай backend руу External Request хэлбэрээр дамжина (POST /api/messenger/login). Backend талд ирсэн нэр/нууц үгийг ашиглан eTax-ээс токен авч, амжилттай бол хэрэглэгчийн мэдээлэлтэй холбон DB-д хадгална. Бот дахин хэрэглэгчид “Нэвтрэлт амжилттай боллоо” гэсэн мессежийг өгнө. Харин нэр эсвэл нууц үг буруу тохиолдолд амжилтгүй хариу өгч, бот “Нэвтрэх мэдээлэл буруу байна” гэх мэт алдааны мэдэгдэл илгээнэ.
Компанийн бүртгэл / сонголт урсгал: Нэг eTax хэрэглэгч хэд хэдэн ААН-ийн тайлан илгээх эрхтэй байж болох тул ManyChat-ээр дамжуулан хэрэглэгчээс илгээх компанийн сонголтыг хийлгэнэ. Энгийн арга нь: хэрэглэгчээс компанийн нэрийг асууж (эсвэл жагсаалтаас сонгуулах), түүнийг манай систем дээр тухайн ent_id-тэй холбож бүртгэх юм. Ботын /companies команд өгөгдсөн тохиолдолд backend /api/user/getUserOrgs-ийг дуудаж бүх компанийг жагсаан, ManyChat шаблоноор товч хэлбэрээр сонголт өгч болно. Эсвэл шууд хэрэглэгчээс нэрээр нь хайж нэмэх flow (Add Company) хэрэгжүүлж болох юм. MVP үед нэг компанитай хэрэглэгчид төвлөрөх тул энэ хэсгийг хялбарчлалтайгаар шийдэж, дараа өргөтгөх боломжтой.
“Миний тайлан” (Тайлангийн тойм) урсгал: Хэрэглэгч Messenger дэх цэснээс “Миний тайлан” товчийг сонгоход backend руу /api/messenger/report-summary хүсэлт явна. Backend дээр тухайн хэрэглэгчийн сонгосон компанид хэдэн тайлан илгээх дутуу байгааг eTax API-ээр авч, тухайлсан мэдээллийг товч текстээр буцаана. Жишээ нь: “2025 оны 07-р сард Х тайлан, НӨАТ тайлан илгээх шаардлагатай байна” гэсэн мессеж бот илгээнэ. Энэ нь хэрэглэгчид энэ сарын ямар тайлангууд дутуу байгааг нэг дор сануулах зорилготой.
“X тайлан илгээх” урсгал: Энэхүү үйлдэл нь чатботоос вебрүү шилжих горимтой. Хэрэв хэрэглэгч тайлан илгээхээр шийдэж “Илгээх” товч дарвал ManyChat Open Website үйлдлээр https://xsender.mn/reports хуудас (манай веб апп) руу холбогдоно. Web App дээр тухайн хэрэглэгчийн сонгосон компанийн тайлангийн жагсаалт, “X тайлан илгээх” товч бүхий интерфейс ачигдах бөгөөд хэрэглэгч баталгаажуулан илгээхэд бодит API дуудлага хийгдэнэ (веб дотор). Илгээсний дараа веб дээр амжилтын мэдээлэл гарч ирэх ба мөн Messenger бот руу webhookээр мэдэгдэж болох юм. Важно: Бот дээрээс шууд тайланг API-р илгээхээс илүү веб интерфейсээр илгээж буй нь олон шаттай үйлдлийг хэрэглэгчид график интерфейстэйгээр найдвартай гүйцэтгүүлэх давуу талтай.
Төлбөр цэнэглэх (QPay) урсгал: Хэрэв хэрэглэгч 3 үнэгүй илгээх эрхээ ашиглаж дууссан бол чатбот автоматоор төлбөр шаардлагатайг мэдэгдэнэ. Энэ үед ManyChat дээр “Цэнэглэх” гэх товч гарч ирэх ба товчыг дарахад мөн л Open Website үйлдлээр https://xsender.mn/payment хуудас руу хөтөлнө. Манай веб апп QPay-ийн төлбөр хүлээн авах интерфэйсийг (QR код гэх мэт) гаргаж өгнө. Хэрэглэгч банкны апп-аар QPay QR-ийг уншуулж төлбөр хийсний дараа манай backend-д QPay webhook дуудлага ирж, төлбөр амжилттайг бүртгэн, тухайн хэрэглэгчийн дансны үлдэгдэлд кредит нэмнэ. Дараа нь хэрэглэгч дахин чатбот руу буцаж тайлан илгээх үйлдлээ үргэлжлүүлэх боломжтой болно.
ManyChat webhook integration: Дээрх урсгалуудыг дэмжихийн тулд Node.js backend дээрээ тусгай endpoint-уудыг зохион байгуулсан. ManyChat-ийн External Request буюу webhook дуудлагаар манай API-ууд руу холбогдох бүтэц нь дараах байдалтай:
/api/messenger/login – POST – Chatbot-оос ирсэн etax нэр, нууц үгийг хүлээн авч, eTax-аар шалган токен үүсгээд манай user мэдээлэлтэй холбож хадгална.
/api/messenger/add-company – POST – Хэрэглэгчийн оруулсан компанийн нэр (эсвэл регистрийн дугаар) зэргийг авч, тухайн компаниа манай системд бүртгэнэ. eTax API дуудаж шалган ent_id-г холбож өгч болно.
/api/messenger/report-summary – GET – Хэрэглэгчийн компанид хамаарах дутуу тайлангийн тоо, төрлийг авч текст хувилбараар буцаана.
Ингэж ManyChat бот нь бүх энгийн интеракцыг гүйцэтгэх ба нарийн үйлдлүүдийг (тайлан илгээх, түүх харах, төлбөр хийх зэрэг) хэрэглэгчийг веб рүү шилжүүлэх замаар шийдэж байгаа нь системийн найдвартай ажиллагаа болон UX аль алинд нь тустай шийдэл болж байна.
5. Backend API endpoint-уудын жагсаалт, хэрэглээ (Node.js)
X-SENDER-ийн сервер талын програмчлал Node.js (Express) дээр хийгдэх ба хэрэглэгчийн үйлдэл бүрт зориулагдсан хэд хэдэн REST API endpoint-уудыг хангана. Эдгээр endpoint-үүд нь дээр дурдсан бот болон веб апп-тай харилцахад хэрэглэгдэнэ. Гол endpoint-уудыг үүрэг, хэрэглээний хамт жагсаавал:
POST /api/messenger/login – Messenger ботын нэвтрэх урсгалаас дуудагдана. Body-д ирсэн username, password-ийг ашиглан eTax-ийн auth серверээс токен авч, тухайн хэрэглэгчийн манай систем дэх бүртгэлтэй холбон, токеныг (JWT) шифрлэн хадгална. Хариуд нь ManyChat-д амжилт/алдааны статус буцаана.
POST /api/messenger/add-company – Messenger ботын компанийн бүртгэл урсгалаас дуудна. Оруулсан компанийн нэр/регистрийн дугаараар eTax API-ээс хайж, тухайн компанийн ent_id-г олж хэрэглэгчийн бүртгэлтэй холбоно. Үүний дараа манай Company таблицад компанийн нэр, ent_id, харгалзах хэрэглэгчийн ID-тай шинэ бичлэг үүсгэнэ.
GET /api/messenger/report-summary – Messenger бот “Миний тайлан” товч дарах үед дуудна. Хэрэглэгчийн ID-аас харагдах компаниудын тайлангийн төлөвийг нэгтгэн, одоогоор хэдэн тайлан (ямар төрлийн) илгээгээгүй байгааг товч текстээр буцаана. Энэ үед шаардлагатай бол манай backend дотор өмнө авсан ent_id-ийг ашиглан eTax API руу /api/return/list (тайлангийн жагсаалт) дуудлага хийж, бодит мэдээллийг түүжинэ.
GET /api/companies – Веб апп дээр компанийн жагсаалт, статусыг харах, сонгох зорилгоор хэрэглэгдэнэ. Хэрэглэгчийн ID (эсвэл Messenger PSID)-гаар холбоотой бүх компаниудыг манай Company таблицаас шүүж JSON-ээр буцаана. Мөн ent_id бүрийн хувьд eTax дээр хэдэн тайлан дутуу байгааг тооцоолсон field агуулах боломжтой (кэш мэдээлэл ашиглах эсвэл шууд лавлаж болно).
GET /api/reports – Сонгосон компанийн илгээх шаардлагатай тайлангийн жагсаалт. Веб аппын “Тайлан илгээх” хуудас ачих үед энэхүү API-ийг duudna. Параметрт ent_id аван, eTax API-ийн тайлангийн жагсаалт сервисийг дуудаж тухайн компанийн илгээх ёстой бүх тайлангийн дэлгэрэнгүйг (маягтын дугаар, хугацаа гэх мэт) буцаана. Хариуг хэрэглэгчийн веб интерфейс дээр жагсаалт хэлбэрээр үзүүлнэ.
POST /api/reports/submit (эсвэл /api/submitX) – Тайлан илгээх үндсэн endpoint. Веб аппын “Илгээх” товчийг дарахад хүсэлт манай backend руу ирж, request body нь ent_id, formNo, period болон isZeroReport зэрэг талбаруудыг агуулна. Backend энэхүү мэдээллийг авч eTax-ийн тайлан илгээх API-руу шууд дамжуулна. Амжилттай бол манай талд ч бас тухайн тайлангийн Report бичлэгийг үүсгэн status="SUCCESS" гэж тэмдэглэж, хэрэглэгчид OK хариу буцаана; алдаа гарвал status="ERROR" төлөвтэй тэмдэглэж алдааны мэдээллийг дамжуулна (дэлгэрэнгүйг 8-р хэсгээс харна уу).
GET /api/reports/history – Хэрэглэгчийн өмнө нь X-SENDER-ээр илгээсэн бүх тайлангийн түүхийг авах API. Веб апп дахь “History” хуудсыг ачаалахад дуудагдана. Энэ нь манай Report таблицаас тухайн хэрэглэгчийн компанийн бүх илгээсэн тайлан (амжилттай болон алдаатай) мэдээллийг авч харуулна. Тухайн бичлэгүүдэд тайлангийн төрөл, огноо, илгээсэн огноо, статус, алдааны улмаас амжилтгүй бол алдааны тайлбар зэрэг хадгалагдсан байна.
POST /api/qpay/invoice – Хэрэглэгч төлбөр хийх хүсэлт гаргахад (чатботоос эсвэл вебээс) QPay-д шинэ төлбөрийн инвойс үүсгэх API дуудна. Үүнд төлөх дүн (жишээ нь 50,000₮ гэх мэт), хэрэглэгчийн ID зэрэг мэдээлэл орно. QPay энэ хүсэлтийн хариуд тухайн төлбөрийн QR код буюу холбоосыг буцаах бөгөөд манай API энэ мэдээллийг хэрэглэгчид дамжуулна (веб апп дээр бол QR-г харуулна, чатботоор бол зураг эсвэл холбоос явуулж болно).
POST /api/qpay/callback – QPay-ээс манай систем рүү илгээх webhook дуудлага. Хэрэглэгч банкны апп-аар төлбөрөө хийхэд QPay-ийн талбар энэ endpoint руу төлбөрийн гүйлгээний дугаар, төлөв (амжилттай/амжилтгүй), төлсөн дүн зэрэг мэдээллийг илгээнэ. Манай систем уг мэдээллийг хүлээн авч, тухайн хэрэглэгчийн Payment болон User бичлэгүүдийг шинэчилнэ. Тухайлбал, Payment таблицад төлбөрийн гүйлгээг бүртгэж, User-ийн дансны үлдэгдэлд төлсөн дүнг нэмнэ. Дараа нь хэрэглэгчийн эрхийг (тайлан илгээх эрхтэй эсэх) update хийж, хэрэв чатботоор төлбөр хийсэн бол ManyChat API ашиглан “Төлбөр амжилттай, таны данс цэнэглэгдлээ” зэрэг мэдэгдэл илгээж болно.
Админ зориулалттай API: Админ панелийн хэрэгцээнд зарим нэмэлт endpoint байдаг. Үүнд зөвхөн админ эрхээр хандах GET /api/admin/logs (системийн сүүлийн үеийн үйлдлүүдийн журнал), GET /api/admin/user/:id/reports (тодорхой хэрэглэгчийн тайлангийн түүх) гэх мэт. Мөн шаардлагатай тохиолдолд POST /api/admin/submit зэргээр админаас хэрэглэгчийн өмнөөс тайлан илгээх trigger хийх боломжтой endpoint байж болно (энэ нь зөвхөн дотоод хэрэглээнд зориулагдана).
Эдгээр API-ийн ач холбогдол нь Messenger болон вебийг холбох “өвөрмөц зангилаа” болж өгч буй явдал юм. ManyChat дээрх webhook integration-ууд, мөн веб аппаас хийгдэх хүсэлтүүд бүгд энэхүү backend API-ээр дамжин гүйцэтгэгдэнэ. Node.js сервер нь цааш eTax, QPay зэрэг гадаад API-уудтай харилцаж, бизнес логик (компанийн удирдлага, төлбөрийн төлөв шалгах гэх мэт)-ийг мөн гүйцэтгэнэ.
6. PostgreSQL бүтэц (Schemas: user, company, report, token, payment, schedule)
Системийн өгөгдлийг хадгалах дотоод мэдээллийн сан нь PostgreSQL байх бөгөөд Railway зэрэг cloud үйлчилгээ дээр байршуулна. Бүтэцчилсэн өгөгдөл хадгалах тул хэд хэдэн үндсэн хүснэгт (table) тодорхойлогдоно:
User (Хэрэглэгч): Системийн хэрэглэгчийн суурь мэдээлэл хадгална. Гол талбарууд нь id (анхдагч түлхүүр), fb_psid (Messenger-ийн хэрэглэгч ID), etax_username (татварын системийн хэрэглэгчийн нэр; анхлан login үед авч болно), etax_token (шаардлагатай бол токеныг хадгалах талбар, DB дээр AES шифртэй хадгалах), token_expires (токен дуусах хугацаа), balance (урьдчилсан төлбөрийн дансны үлдэгдэл) зэрэг орно. Нууц үг зэрэг мэдрэмтгий мэдээллийг DB-д хадгалахгүй, зөвхөн токен болон шаардлагатай мэдээллийг хадгална.
Company (Компани): eTax систем дээрх нэгж байгууллагыг илэрхийлнэ. Талбарууд: id (PK), ent_id (Татварын систем дэх байгууллагын ID), name (компанийн нэр), owner_user_id (манай систем дэх эзэмшигчийн ID буюу User таблиц руу foreign key). Нэг хэрэглэгч олон компанитай холбоотой байх боломжтой (1→N харьцаа), энэ хүснэгтээр дамжуулан хэрэглэгчид компаниа солих, нэмэх боломжтой.
Report (Тайлан): X-SENDER-ээр дамжуулан илгээсэн эсвэл илгээхээр оролдсон тайлангийн бүртгэл. Талбарууд: id (PK), company_id (аль компанийн тайлан болох, FK), form_no (тайлангийн маягтын дугаар, жишээ нь 1100 гэх мэт), period (тайлангийн хугацаа, жишээ нь 2023-12), submitted_at (илгээсэн огноо), status (тайлангийн одоогийн төлөв: pending/success/error гэх мэт) болон error_message (алдаатай бол алдааны дэлгэрэнгүй). Тайлан илгээх үйлдэл бүр энэхүү хүснэгтэд бичигдэнэ. Ингэснээр хэрэглэгчийн түүх харах боломж болон системийн статистик тооцоолох суурь мэдээлэл болно.
Token: Хэрэглэгчийн eTax access токеныг хадгалах буюу refresh хийхэд зориулагдсан хүснэгт. Талбарууд: user_id (FK), token (JWT тэмдэгт мөр), expires_at. Гэвч олон тохиолдолд token-ийг удаан хадгалахгүй, зөвхөн түр байлгаад устгах учраас энэ хүснэгт шаардлагагүй байж болно. Хэрэв хэрэгжүүлэх бол токены утгыг шууд бус байдлаар (AES шифрлэж) хадгалж, өөр програм руу задруулахгүй байхаар хамгаална.
Payment (Төлбөр): Хэрэглэгчийн хийсэн QPay төлбөр, цэнэглэлтийн бүртгэл. Талбарууд: id, user_id (FK), invoice_id (QPay-ээс ирсэн төлбөрийн дугаар), amount (төлсөн дүн), paid_at (төлсөн огноо), status (төлбөр амжилттай эсэх). Мөн payment_type гэх мэт багц талбарууд (жишээ нь, банкны app-р хийсэн эсэх) байж болно. Энэ хүснэгтээс хэрэглэгчийн дансны үлдэгдэл тооцогдох бөгөөд зарцуулалтыг (тайлан илгээх тутам суутсан) User хүснэгтийн balance-тай уялдуулна.
Schedule (Хуваарь): Цаашдын фазад шаардлагатай автомат илгээх хуваарийн мэдээлэл хадгална. Талбарууд: id, user_id, company_id, report_type (тайлангийн төрөл, формын код), schedule_cron (илгээх давтамж, жишээ нь сар бүрийн 1-ний өдөр гэх мэт), next_run (дараагийн төлөвлөгдсөн илгээх огноо) гэх мэт. Энэ хүснэгтийг Phase 2-оос нэвтрүүлэх Auto Scheduler функционалын хүрээнд ашиглахаар төлөвлөсөн. Schedule-т бүртгэлтэй тайланг хүрэх үед нь серверийн төлөвлөгч (cron job эсвэл queue worker) автоматаар илгээж, Report хүснэгтэд бичлэг үүсгэх зарчмаар ажиллана.
Түүнчлэн, дээрх хүснэгтүүдийн хооронд гадаад түлхүүрийн (FK) холбоосууд тогтоож өгсөн. Жишээ нь: user → company (нэг хэрэглэгч олон компани), company → report (нэг компани олон тайлангийн бичлэгтэй), user → payment (нэг хэрэглэгч олон төлбөрийн бичлэгтэй) гэх мэт. Ийм холбоос нь мэдээллийг шүүж харах, устгахдаа каскад хийх, мөн өгөгдлийн бүрэн бүтэн байдлыг хангахад тустай. Бүх өгөгдөл PostgreSQL дээр аюулгүй хадгалагдах ба нөөц болон scale асуудлыг DevOps хэсэгт тусгаж өгсөн болно.
7. Web App интерфейс – тайлан илгээх, түүх харах, төлбөр цэнэглэлт
X-SENDER-ийн веб хэрэглэгчийн интерфейс нь ManyChat чатботыг үргэлжлүүлэн нарийн үйлдлүүдийг гүйцэтгэх төв систем болно. Хэрэглэгч чатботоос веб рүү шилжсэн үед дараах үндсэн хуудсууд, функцүүдийг веб орчинд гүйцэтгэнэ:
“Тайлан илгээх” хуудас (/reports): Хэрэглэгчийн сонгосон компанийн илгээх дутуу байгаа тайлангийн жагсаалтыг харуулна. Жагсаалт дахь бичлэг бүр тайлангийн нэр (жишээ: “2025/07 Х тайлан”), маягт №, хугацаа зэрэг мэдээлэлтэй байна. Мөн тус бүрийн хажууд “Илгээх” гэсэн товч байрлуулна. Хэрэглэгч товчийг дарахад систем тухайн тайлангийн мэдээллийг баталгаажуулан eTax API-р илгээх үйлдлийг хийж гүйцэтгэнэ (Section 8-д тайлбарласан логикоор). Илгээж дуусмагц тухайн мөрөнд “Амжилттай илгээгдлээ” гэх мэт төлөв гарч, эсвэл алдаа гарвал алдааны мэдээлэл (улаанаар) харуулна. Хэрэв хэрэглэгч дараалсан хэд хэдэн тайланг илгээх шаардлагатай бол энэ хуудсан дээрээс бүгдийг дараалан илгээх боломжтой.
“Түүх харах” хуудас (/history): Энэ хуудсанд хэрэглэгчийн өмнө X-SENDER ашиглан илгээсэн бүх тайлангийн түүхийг харуулна. Өдөр/саргаар шүүж харах, амжилттай/алдаатай шүүлтүүрдэх боломжтой. Бичилт бүр дээр тайлангийн төрөл (Х тайлан, ААНОАТ, гэх мэт), хугацаа, илгээсэн огноо, статус (ногооноор Success, улаанаар Error гэх мэт), хэрэв алдаатай бол товч тайлбар (жишээ нь: “Token expired – дахин нэвтэрнэ үү” гэх мэт) гаргана. Энэхүү түүхийн мэдээлэл нь Report хүснэгтийн өгөгдөл дээр тулгуурлан бүрдэнэ. Мөн энэхүү хуудсыг админ хэрэглэгч өөр ID оруулаад тухайн хэрэглэгчийн түүхийг харах байдлаар ашиглах боломжийг давхар бодолцсон (админ панелийн хэсэгт дурдсан).
“Төлбөр цэнэглэх” хуудас (/payment): Хэрэглэгчийн урьдчилсан төлбөрийн дансыг цэнэглэх зориулалттай. Эхэнд нь хэрэглэгчийн одоогийн үлдэгдэл кредит хэд байгаа, хэдэн тайлан илгээх эрхтэйг харуулна (жишээ: “Таны үлдэгдэл: 2 илгээх эрх (10,000₮)”). Хэрэв хэрэглэгч эрхээ нэмэхийг хүсвэл QPay төлбөрийн сонголтыг энэ хуудсан дээрээс шууд гүйцэтгэнэ. Үүний тулд “₮50,000-р цэнэглэх” гэх мэт товчнууд эсвэл өөр дүн оруулах талбар байрлуулж болно. Хэрэглэгч сонгосны дараа манай backend QPay invoice үүсгэн, төлбөрийн QR код болон зааврыг веб дээр харуулна. Төлбөр амжилттай болоход дээр дурдсан QPay webhook манай системд ирж, веб хуудсан дээр автоматаар “Төлбөр амжилттай орлоо, таны шинэ үлдэгдэл ХХ₮” гэж real-time (WebSocket эсвэл polling ашиглан) шинэчлэгдэх байдлаар хэрэгжинэ.
Бусад интерфейс элементүүд: Эдгээр үндсэн 3 хуудаснаас гадна хэрэглэгчийн ландинг / нүүр хуудас байдаг. Landing Page дээр бүтээгдэхүүний танилцуулга, давуу талын тухай богино мэдээлэл, мөн “Messenger чатботыг эхлүүлэх” болон “QPay-ээр төлбөр хийх” товчнууд байрлана. Ингэснээр хэрэглэгч шууд вебээс чатбот руу орж эхлэх эсвэл дансаа цэнэглэх боломжтой. Мөн ирээдүйд бүрэн вебд суурьтай хувилбарт шилжих суурийг ингэж тавьж байгаа юм.
Веб апп нь Responsiveness буюу хөдөлгөөнт төхөөрөмж дээр ч зөв харагдахаар зохиогдоно (ихэнх хэрэглэгч Facebook апп-аас чатботыг ашиглах тул гар утаснаасаа веб хуудас руу орж ирнэ гэж тооцсон). UI дизайны хувьд цэвэрхэн, ойлгомжтой байдлыг хангаж, брэндийн өнгө төрх (дараагийн хэсэгт үзүүлсэн) ашиглана. Веб болон чатбот хооронд хэрэглэгчийн тасралтгүй session залгамж чанарыг хадгалах үүднээс Messenger-ийн OAuth эсвэл тусгай токен механизмыг ашиглаж, веб апп нь чатботоор дамжиж ирсэн хэрэглэгчийг дахин нэвтрэлгүйгээр таних боломжийг шийднэ (жишээ нь, ManyChat-ийн Flow Builder-ээр веб линкэд unique параметр шингээж өгөх).
8. Тайлан илгээх логик: үе шатууд, формын өгөгдөл, статусууд (pending, success, error)
X-SENDER системийн хамгийн чухал хэсэг бол тайланг зөв явуулах бизнес логик юм. Тайлан илгээх үйл явц хэд хэдэн үе шаттай явагдана:
Илгээх үйлдэл эхлүүлэх (Pending): Хэрэглэгч “тайлан илгээх” командыг өгмөгц систем манай мэдээллийн санд тухайн илгээх гэж буй тайлангийн бичлэгийг “pending” төлөвтэй үүсгэнэ. Энэ нь тайлан илгээх процессыг эхлүүлсэн тэмдэглэгээ бөгөөд олон тайланг зэрэг илгээх үед алдагдалгүй дараалуулах, эсвэл горим тасарсан тохиолдолд дахин үргэлжлүүлэх боломжийг хангах зорилготой. Мөн өндөр ачааллын үед тайлангуудыг дарааллын сан (queue) руу оруулж, тусгай worker-үүд ээлжээр гүйцэтгэх архитектор төлөвлөсөн (Phase 2-д дэлгэрсэн).
Мэдээлэл шалгах, бэлтгэх: Илгээх гэж буй тайлангийн компанийн ent_id, formNo (маягтын дугаар), тайлант хугацаа зэрэг шаардлагатай бүх мэдээлэл бүрдсэн эсэхийг шалгана. Мөн хэрэглэгчийн eTax access token хүчинтэй эсэхийг нягтална – хугацаа нь дууссан бол автоматаар дахин refresh хийх буюу шаардлагатай бол хэрэглэгчээс дахин нэвтрэх мэдээлэл авах механизмыг ашиглана. Бэлтгэл үе шатанд payload JSON объектыг бүрдүүлнэ (жишээ нь: { ent_id: 12345, formNo: 1100, period: "2023-12", isZeroReport: true }). “X тайлан” бол isZeroReport талбарыг true буюу 1 болгож оруулна. Мөн тайланд ямар нэг нэмэлт датагүй тул орлогын мөрүүдийг 0 гэж өгч болох ч ихэнхдээ зөвхөн флаг хангалттай.
eTax API рүү илгээх: Backend процесс бэлэн болмогц eTax-ийн тайлан хүлээн авах endpoint руу дээрх JSON мэдээллээ илгээнэ (HTTP POST хүсэлт). Энэ үед HTTP header-д хэрэглэгчийн токеныг Authorization: Bearer <token> хэлбэрээр залгаж өгнө. Хүсэлт амжилттай очиж, eTax сервер хариу өгтөл X-SENDER сервер хүлээлтийн горимд байна. Зарим тохиолдолд хэдхэн секундын дотор хариу ирэх ч, сүлжээний гэмтэл саатал гарвал тайлан илгээх хүсэлтийг дахин оролдох (retry) зохицуулалтыг Phase 2 үед нэмж сайжруулна гэж төлөвлөсөн.
Хариу (Success/Error) хүлээн авах: eTax API-ээс ирсэн HTTP хариуг уншина. Хэрэв хариу нь амжилттай бол манай систем дэх тухайн Report бичлэгийн төлөвийг “success” болгож, eTax-ээс ирсэн баталгаажилтын дугаар зэрэг мэдээллийг хадгална. Амжилтын кейсэд хэрэглэгчид “Тайлан амжилттай илгээгдлээ” гэсэн мэдэгдэл шууд очно. Хэрэв eTax талд алдаа гарвал (жишээ нь: payload-д дутуу талбар, буруу формат, эсвэл тухайн тайлан өмнө нь илгээгдсэн гэх мэт) “error” статус буцаана. Манай систем энэ тохиолдолд Report бичлэгийг “error” болгож, дагалдан ирсэн алдааны код, зурвасыг error_message талбарт хадгална. Мөн хэрэглэгчид алдааны төрлийг ойлгомжтой хэлээр харуулна (жишээ нь: “Токен хугацаа дууссан - дахин нэвтэрнэ үү” гэх мэт).
Статус шалгах, баталгаажуулах: Дээрх хариу ирсний дараа нэн даруй хэрэглэгчид мэдээлсэн ч админ талд болон баталгаажуулалт purposes-д давхар шалгалт хийх зарчим баримтална. Тухайлбал, тодорхой хугацааны дараа eTax-ийн “тайлангийн жагсаалт” сервисийг дахин дуудахад тухайн хугацааны тайлан жагсаалтаас хасагдсан эсэхийг шалгаж болно. Энэ нь тайлан амжилттай очсон эсэхийг confirm хийх нэг арга. Хэрэв тайлан байсаар байвал систем автоматаар дахин илгээх оролдлого хийх, эсвэл админд анхааруулга өгөх зэргээр алдагдалгүй дамжуулах зорилгыг хангана.
Лог бичилт, мэдэгдэл: Тайлан илгээх үйлдлийн төгсгөлд (амжилттай эсвэл алдаатай аль ч нөхцөлд) манай системийн үйл явдлын лог файлуудад тохирох бичилтүүдийг хийж үлдээнэ. Үүнд: ямар хэрэглэгчийн ямар тайлан илгээгдсэн, eTax-ээс ирсэн хариу статус, хэрэв алдаа гарсан бол алдааны дэлгэрэнгүй гэх мэт. Энэ мэдээлэл нь дараа нь админ панелаар дамжуулан хяналт хийхэд ашиглагдана. Мөн шаардлагатай тохиргоотой бол ManyChat-ээр дамжуулан push notification илгээж “Таны тайлан амжилттай илгээгдлээ” гэх мэт мессеж хэрэглэгчийн Messenger рүү очих боломжтой (энд Facebook API-ийн messaging tag ашиглахыг бодолцоно).
Энэхүү процессыг эрсдэл багатай, найдвартай болгохын тулд Phase 2-т хэд хэдэн сайжруулалтууд хийгдэнэ: queue-д суурилсан олон процесс зэрэг гүйцэтгэх, алдаатай ажилласан тайланг дахин автоматаар оролдох (retry with backoff), амжилтгүй оролдлого тодорхой тооноос хэтэрвэл админд мэдэгдэх, г.м. Мөн хэрэглэгчийн веб интерфейс болон ботод “илгээж байна...” гэсэн төлөв гаргаж өгөх, дуусмагц нь шинэчлэгдэх механизмыг (websocket/polling) хэрэгжүүлнэ. Ингэснээр хэрэглэгч тайлан илгээх явцыг ойлгомжтой хянана. Нэг тайлангийн илгээх цикл дунджаар eTax талдаа хэдхэн секунд зарцуулдаг. Өдөр бүрийн тайлангийн оргил цагууд (жишээ нь сарын сүүлийн өдрүүд) олон таарах үед манай систем дотор 1 минутанд олон зуун хүсэлт зэрэг явахыг санаж, тэдгээрийг зохицуулан гүйцэтгэх batch processing горимыг давхар тооцоолсон (микро үйлчилгээ болон message broker хэрэглэхийг Phase 2-д авч үзнэ).
9. Admin Panel – лог, хэрэглэгчийн түүх, гараар илгээх, статистик
X-SENDER-ийн Админ панел нь зөвхөн админы эрхээр нэвтэрч болох, дотоод хяналт, засвар үйлчилгээний зориулалттай вэб интерфейс юм. Админ панелийн гол функц, боломжууд:
Нэвтрэх эрх: Админ хэрэглэгч нь урьдчилан бүртгэгдсэн (эсвэл LDAP/SSO гэх мэт шийдэлтэй байж болно) обьект байна. Панел руу нэвтрэхдээ хэрэглэгчийн UI-с тусдаа admin login хуудаснаас нэвтэрч орно. Ингэснээр энгийн хэрэглэгчид энэхүү хэсэгт нэвтрэх боломжгүй, зөвхөн системийн хөгжүүлэгч, операторын баг л орно.
Дашбоард мэдээлэл: Панелд нэвтэрмэгц ерөнхий статистик үзүүлэлтүүд харагдана. Жишээ нь: Өнөөдрийн (эсвэл энэ сарын) байдлаар хэдэн тайлан илгээсэн, хэд нь амжилттай, хэд нь алдаа гарсан, амжилтын хувь, дундаж илгээх хугацаа зэрэг гол KPI-үүдийг график эсвэл тоон утгаар харуулна. Мөн хэрэглэгчдийн нийт тоо, идэвхтэй компаниудын тоо гэх мэт бусад мэдээллийг ч гаргаж болно.
Логийн хяналт: Системийн үйлдлийн real-time логийг админ панелаар дамжуулан хянах боломжтой. Жишээ нь, сүүлийн 24 цагийн бүх тайлан илгээх оролдлогын журнал жагсаана. Тус бүрийн хажууд timestamp, хэрэглэгчийн ID (эсвэл нэр), компанийн нэр, тайлангийн төрөл, илгээх үр дүн (OK/FAIL) зэрэг мэдээлэл багтана. Алдаа гарсан тохиолдолд тэр мөрийг тод өнгөөр ялгаж, details дээр дарж алдааны stack trace, API error message зэргийг харах боломжтой хийнэ. Энэ нь тухайн үедээ гарсан алдаа юу байв, шийдсэн эсэхийг хянахад тустай.
Хэрэглэгчийн тайлангийн түүх: Админ хүн тодорхой нэг хэрэглэгчийг онцолж харах шаардлага гардаг. Жишээ нь, хэрэглэгч А гомдол гаргаад “миний тайлан яагаад илгээгдээгүй байна вэ?” гэхэд админ панел дээрх хайлтын талбараар username эсвэл компанийн нэрээр хайж, тухайн хэрэглэгчийн бүх тайлангийн бүртгэлийг харна. Ингэхдээ Report хүснэгтийн мэдээллийг шууд үзүүлэх ба аль тайлан нь амжилттай/алдаатай, алдаа гарсан бол юу болсныг харж хэрэглэгчид хариу өгөх боломжтой.
Гараар илгээх (Manual trigger): Онцгой нөхцөлд, админ хэрэглэгч системийг тойруулж тодорхой тайланг гар аргаар илгээх шаардлага гарч магадгүй (жишээ нь хэрэглэгчийн токен хугацаа дууссан ч хэрэглэгч офлайн байвал admin түр орлуулан илгээх, эсвэл систем автоматаар илгээхдээ алдаа өгсөн ч гараар нэг үзэх). Админ панелд ийм боломжийг хязгаарлагдмал хүрээнд олгоно. Тодруулбал, админ тухайн Report бичлэгийн “Retry” товчийг дарж дахин оролдуулах, эсвэл “Submit manually” гэсэн товч дээр дарж өөрийн нууц үгээ дахин оруулан баталгаажуулж байж илгээдэг механизмыг хийж болно. Энэ бүх үйлдэл нь мөн лог бичигдэх бөгөөд ямар админ, хэзээ гараар оролцсон бэ гэдэг тэмдэглэгдэнэ.
Системийн тохиргоо, хяналт: Мөн админ панелаас тодорхой настройк хийх хэсэг байж болно. Жишээ нь: тайлангийн автоматаар илгээх scheduler-г идэвхгүй болгох, эсвэл сэрүүлэх; QPay төлбөрийн тариф өөрчлөх; хэрэглэгчийн эрхийг түр хаах гэх мэт. Эдгээр нь MVP-д заавал шаардлагагүй боловч цаашид хэрэгжүүлэхдээ админ UI-д нэмж өгөх боломжтой.
Админ панелийн хөгжүүлэлтэнд React/Next.js зэрэг технологийг ашиглан SPA хэлбэрээр хийх төлөвлөгөөтэй (frontend талын технологийг DevOps хэсэгт дурдсан). Бусад талын онцлог нь аюулгүй байдал: админ панелийг олон нийтэд хаалттай (жишээ нь IP хязгаарлалт хийх, эсвэл VPN-ээр нэвтрэх) байхаар төлөвлөж болно. Мөн админ хэрэглэгчид зөвхөн шаардлагатай мэдээлэлд хандах эрхтэй бөгөөд хувийн мэдээлэлд шууд хандах боломжгүй – зөвхөн системийн лог, агрегат статистик зэрэг хязгаарлагдмал мэдээлэл үзнэ. Ингэснээр хэрэглэгчийн дата хувийн байдлаар хамгаалагдана (энэ тухай 10, 15-р хэсэгт дэлгэрүүлнэ). Нэмэлтээр, админ панел дээр статистик тайлан гаргах боломжийг Phase 2-д нэмнэ гэж үзсэн. Жишээ нь, сард дундажаар хэдэн тайлан илгээж байгаа, өсөлтийн график, хамгийн их ачаалалтай цагууд, алдааны хувь гэх мэт мэдээллийг нэгтгэсэн хүснэгт, графикаар харах боломж. Энэ нь үйлчилгээний чанарыг үнэлэх, цаашдын бизнес шийдвэр (сервэрийн нэмэлт нөөц, хэрэглэгчдийн зан төлөв гэх мэт)-т ач холбогдолтой.
10. Security ба нууцлалын архитектур (AES encryption, access token, лог тусгаарлалт)
X-SENDER нь татварын эмзэг мэдээлэлтэй харьцаж буй учир аюулгүй байдал, нууцлал нэн тэргүүний ач холбогдолтой. Системийн дизайн, хөгжүүлэлтэд дараах security шийдлүүдийг тусгав:
Хэрэглэгчийн мэдээлэл хамгаалалт: Бүртгэлтэй хэрэглэгчийн хувийн мэдээлэл, eTax нэвтрэх өгөгдөл зэргийг гуравдагч талд огтхон ч задруулахгүй ба зөвхөн үйлчилгээ үзүүлэх зориулалтаар ашиглана гэсэн хатуу бодлого баримтална. Жишээ нь, хэрэглэгчийн eTax-н нууц үгийг огт хадгалахгүй, харин зөвхөн токен хэлбэрээр түр хадгалах эсвэл шаардлага гарвал дахин асуух зарчмыг баримтална. Харин хэрэглэгчийн eTax username, ent_id зэрэг шаардлагатай зарим мэдээллийг шифрлэж хадгална. PostgreSQL дээрх эмзэг талбаруудыг AES-256 алгоритмаар шифрлэн, зөвхөн аппликэйшн серверийн санах ойд байгаа түлхүүрээр тайлан ашигладаг зохицуулалт хийнэ. Ингэснээр өгөгдлийн сангийн түвшинд мэдээлэл алдагдсан ч уншигдахгүй байх давхар баталгаа болно.
Access Token-ийн менежмент: eTax-аас авсан access token (JWT) нь тодорхой хугацаатай хүчинтэй. Иймд X-SENDER систем token refresh хийх эсвэл хэрэглэгчээс дахин нэвтрэх мэдээлэл авах гэсэн хоёр аргыг хослуулна. Урт хугацааны refresh token олгогддог бол түүнийг бас аюулгүй хадгалах асуудал гарна. Эхний хувилбар дээр MVP-д access token-ийг санах ойд хадгалж, 5-10 минут тутамд хүчинтэй эсэхийг шалган, шаардлагатай бол хэрэглэгчээс Messenger-ээр дахин нэвтрэхийг шаардах энгийн арга хэрэглэнэ. Цаашид илүү сайжруулах хүрээнд (Phase 2, 3) Keycloak/OpenID Connect refresh flow-ийг бүрэн дэмжиж, хэрэглэгчийн оролцоогүйгээр токеныг сунгах механизмыг нэвтрүүлэхийг зорьж байна. Token хадгалах байр нь манай системд шифрлэсэн DB талбар эсвэл түр санах ой (cache) байж болно – гол нь plaintext хэлбэрээр лог бичигдэх, эсвэл бусад алдаа гарах үед задрах боломжгүй болгосон.
Логийн тусгаарлалт, хяналт: Системийн үйлдлийн явцад үлдэх лог бүрт эмзэг мэдээлэл бичигдэхээс сэргийлсэн. Жишээ нь, алдааны лог дахь мессежүүдэд хэрэглэгчийн нууц үг, токен гэх мэт зүйлсийг оруулахгүй. Логуудыг зөвхөн админ хэрэгцээнд ашиглах бөгөөд тухайн хэрэглэгчийн хувийн мэдээлэлд шууд хандалт хийх шаардлага гаргахгүй байдлаар зохион байгуулна. Админ нь зөвхөн нийт үйлдлийн жазууд, ID дугааруудыг харах боломжтой байхаар “personally identifiable” мэдээллийг нь маск хийх юм. Мөн production орчны логийг cloud дээр (Railway гэх мэт) хамгаалагдсан орчинд хадгалж, олон нийтийн сувгаар дамжуулахгүй.
Шифрлэлтийн давхаргууд: Мэдээлэл дамжуулах бүх сувгууд (Messenger webhook, веб апп API дуудлага, eTax API г.м) нь HTTPS протокол ашиглаж, TLS 1.2+ шифрлэлтийн хамгаалалттай байна. Facebook Messenger-ийн өөрийн шифрлэлтийн давхарга давхар үйлчлэх тул чат сувгаар дамжих мэдээлэл ч хамгаалагдсан. Мэдээллийн сангийн нөөцлөлтийг ч шифртэй (атрест) хадгалахыг бодолцоно.
Системийн тусгаарлалт (Isolation): Backend сервер нь олон хэрэглэгчийн хүсэлтийг зэрэг боловсруулдаг ч хэрэглэгч тус бүрийн сешн, токен зэргийг хооронд нь тусгаарлаж хадгална. Хэрэв Puppeteer зэрэг headless браузер ашиглах шаардлага гарвал (жишээ нь fallback үед), процесс тус бүр sandbox дотор ажиллаж дуусаад тэр даруй устгагдана. Энэ нь күүки, сешн мэдээлэл хоорондоо алдагдахаас сэргийлнэ.
Нөөцлөлт (Backup) ба сэргэлт: Өгөгдлийн сангийн бүрэн нөөцлөлтийг өдөрт 1 удаа (эсвэл 12 цаг тутам) автоматаар үүсгэж, тусдаа хадгалах байршилд байршуулна. Railway платформын хувьд built-in backup ашиглах боломжтой. Мөн нэмэлтээр өөр клауд (S3 compatible storage гэх мэт) рүү нөөц хуулбарыг хадгалж байхаар төлөвлөсөн. Сэргэлтийн процессийг тогтмол тестэлж, аливаа гэмтэл гарсан үед хамгийн ихдээ X цагийн өмнөх байдлаар системийг сэргээж чадахуйц байх зорилт тавина.
Нэвтрэлтийн хамгаалалт: Хэрэглэгчийн eTax нэвтрэх оролдлого олон дахин буруу давтагдахаас сэргийлж бот талд rate-limit тавина (жишээ нь 3 удаа буруу оруулбал түр түгжих). Мөн X-SENDER рүү нэвтрэх (админ панел, ирээдүйн веб апп логин) хэсэгт 2FA нэмэх, reCAPTCHA хэрэглэх зэргийг опциональ байдлаар судална.
Security audit & тест: Системийг ашиглалтад орохын өмнө эмзэг байдлын сканнер, penetration test зэргийг хийнэ. Ялангуяа eTax token, хэрэглэгчийн мэдээлэлтэй харьцаж буй хэсэгт OWASP Top 10 эмзэг байдлууд (SQL injection, XSS, гэх мэт) гарахгүй эсэхийг шалгана. Код талд security linters, code review заавал хийнэ.
Нууцлалын бодлого, мэдээлэл устгалт: Хэрэглэгчийн хувийн мэдээлэлтэй холбоотой Privacy Policy-г боловсруулж, хэрэглэгч бүрт ил тод мэдээлнэ (15-р хэсэгт тусгана). Хэрэглэгч үйлчилгээг ашиглахаа болих үед хувийн мэдээллийг бүрэн устгах боломж (Right to be forgotten) зэрэг зарчмуудыг хэрэгжүүлнэ.
Аюул илэрсэн үед авах арга хэмжээ: Хэрэв ямар нэг байдлаар мэдээллийн хамгаалалтыг тойрсон халдлага, алдаа илэрвэл компанийн зүгээс авах шуурхай төлөвлөгөөтэй байна. Үүнд: бүх холбогдох access token, идэвхтэй сешнүүдийг нэн даруй хүчингүй болгож лог-аут хийх; хэрэглэгчдэд болсон явдлын талаар яаралтай мэдэгдэл хүргэх; цаашлаад шалтгааныг нарийн мөрдөн тодруулж, засварлах хүртэл шаардлагатай тохиолдолд системийн зарим хэсгийг түр зогсоох зэрэг арга хэмжээ орно. Мөн цаашид давтахгүйн тулд шинжээчдийн дүгнэлт, зөвлөмжийг хэрэгжүүлнэ.
Дээрх бүх арга хэмжээ, архитектурууд нь “privacy by design” ба “security by design” зарчимд тулгуурлан, эхнээс нь системийг аюулгүй байдлыг хангаж төлөвлөж буйг илтгэнэ.
11. Хөгжүүлэлтийн шатлал (Phase 1 – MVP, Phase 2 – Scale, Phase 3 – SaaS product)
X-SENDER төслийг бүтэн хэрэгжүүлэхэд 3 үндсэн үе шаттай хөгжүүлэлтийн төлөвлөгөө гаргасан. Эдгээр фэйзүүд нь хугацаа, зорилго, хүрэх үр дүнгээрээ ялгагдана:
Phase 1: MVP (1–2 сар) – Гол зорилго: Цөм функционалуудыг богино хугацаанд ажиллуулж, бодитоор турших. Үйл ажиллагаа: Facebook чатботын эхний тохиргоо хийх; хэрэглэгчийг бүртгэх, компани нэмэх логик боловсруулах; тайлан илгээх интеграцийн суурь хөгжүүлэлт (eTax API холболт) хийх; QPay төлбөрийн системийг холбох; энгийн админ панел болон лог харах хэрэгслүүдийг бүтээх; мэдээлэл шифрлэх, токен менежмент зэрэг security-ийн шийдлүүдийг нэвтрүүлэх. Үр дүн: MVP хувилбарыг гаргаж, 50–100 орчим хэрэглэгчид туршилтаар ашиглуулан feedback авахад бэлэн болно. Энэ шатанд үндсэн функцүүд ажиллах ч зарим нарийн зүйлс (жишээ нь олон хэрэглэгчийн зэрэг ашиглалт, автоматаар хуваарьт илгээх г.м) хараахан ороогүй байж болно. Гол нь шийдэл бодит нөхцөлд ажиллахыг баталгаажуулахад анхаарна.
Phase 2: Scale-Up (3–6 сар) – Гол зорилго: Системийг илүү олон хэрэглэгч, илүү олон тайланг доголдолгүй зохицуулах хэмжээнд өргөтгөх. Үйл ажиллагаа: Чатбот болон серверийн гүйцэтгэлийг сайжруулах – үүнд queue system нэвтрүүлж, тайлан илгээх процессыг дараалал, олон процессыг ашиглан явуулах, алдаа гарвал автоматаар дахин оролдох (retry logic) нэмэх; тайланг автоматаар илгээх хугацаат горим (scheduler)-ийг хэрэгжүүлж, хэрэглэгчийн зөвшөөрсөн тайланг хугацаа болоход нь автоматаар илгээдэг болгох; Facebook-ээс гадна Telegram bot хувилбарыг гаргаж, өөр сувгаар үйлчилгээ хүргэх (кодын дахин ашиглалт хийх давуу талтай); системийн хэрэглээний талаарх дэлгэрэнгүй статистик, тайлан гаргах модуль нэмэх (админ талд болон хэрэглэгчийн сонирхолд зориулсан); сервер болон worker-үүдийн автомат өсөлт/бууралт (autoscaling)-ийг клауд орчинд тохируулах – ингэснээр оргил цагуудад ачааллыг даах, намжмал үед нөөцийг хэмнэх боломжтой болно; өгөгдлийн сан болон файлын нөөцлөлт, сэргэлтийн процессыг төгөлдөржүүлэх (илүү богино интервалтай нөөц, олон байршилд давхар хадгалах, автомат сэргээх тест г.м). Үр дүн: Энэ үе шатны төгсгөлд систем маань 5000+ идэвхтэй хэрэглэгч, сард 300,000 хүртэл тайлан илгээх ачааллыг тогтвортой даах чадвартай болно. Хэрэглэгчийн туршлага сайжирч, алдааны хувь эрс буурна. Мөн бизнесийн хувьд ч хэрэглэгчийн суурь тэлж эхэлнэ.
Phase 3: Full Product – SaaS Expansion (6–12 сар) – Гол зорилго: X-SENDER-ийг бүрэн хэмжээний Software-as-a-Service бүтээгдэхүүн болгон төгөлдөржүүлж, өргөн хүрээнд нэвтрүүлэх. Үйл ажиллагаа: Хэрэглэгчдэд зориулсан нэмэлт notification систем-үүдийг нэмэх – тайлангийн хугацаа дөхөхөд сануулах SMS, email илгээх, тайлан амжилттай илгээгдсэн/алдаа гарсан тухай имэйл мэдэгдэл илгээх зэргийг автоматжуулах; Гаднын програм хангамжтай холбогдох API Integration-үүдийг нээх – тухайлбал, томоохон ERP, нягтлангийн програм хангамжууд манайх руу API-ээр холбогдон тайлан илгээх боломж (B2B интеграци); Egeree.mn цахим гэрээний интеграц – хэрэглэгčiдтэй албан ёсны үйлчилгээний гэрээг цахимаар байгуулах, эсвэл хэрэглэгчийн гарын үсгийг үйлчилгээнд авах процессыг нэвтрүүлэх (дараагийн хэсэгт тайлбарлана); Бүрэн хэмжээний веб UI – зөвхөн чатботоор бус, хэрэглэгчид browser-ээсээ нэвтэрч бүх тайлангаа илгээж, хянаж, төлбөрөө хийж чадах комплекс веб порталыг бүтээнэ. Ингэснээр чатбот суваг ашиглах хүсэлгүй хэрэглэгчид ч хамрагдах боломжтой болно; Organization account, Team-based access – нэг аккаунтанд олон хэрэглэгч (баг) хамтран ажиллах боломж, эрхийн зохицуулалт (жишээ нь нэг компани олон ажилтантай, тус тусдаа тайлан илгээдэг бол манай дээр баг үүсгэж хамтарна) зэргийг хэрэгжүүлэх; Дэмжих тайлангийн төрлүүдийг өргөтгөх – зөвхөн Х тайлан бус, ААНОАТ, НӨАТ, урьдчилсан төлбөрийн татвар зэрэг түгээмэл шаардлагатай бүх төрлийн тайланг системээр илгээх боломжтой болгоно. Үүний тулд шаардлагатай форм, шалгалтуудыг нэмэх, eTax API-тай зөв ажиллаж буйг баталгаажуулах гэх мэт ажлууд хийгдэнэ. Үр дүн: Phase 3-ийн эцэст X-SENDER нь жижиг ААН-үүдээс гадна дунд, том байгууллагууд, мэргэжлийн нягтлан бодох фирмүүд ч ашиглаж болохуйц, SaaS хэлбэрийн бүрэн бүтээгдэхүүн болно. Бизнесийн хувьд цаашид олон сувгаар төлбөртэй үйлчилгээ үзүүлэх, интеграц өргөжүүлэх замууд нээгдэх ба тогтвортой орлоготой, өрсөлдөхүйц платформ болон төлөвшсөн байна.
Эдгээр гурван үе шатны хэрэгжилтийн явцад хэрэглэгчдийн санал, тухайн үеийн нөхцөл байдлаас хамаарч зарим өөрчлөлт орж болох ч ерөнхийдөө дээрх төлөвлөгөөг баримтлан хэрэгжүүлэхээр тооцсон. Фаз тус бүрийн төгсгөлд гарах гаралт (output), шалгуур үзүүлэлтүүдийг дээр тусгаж өгсөн тул өөр өөр шатанд төсөл ямар түвшинд хүрэх ёстой нь тодорхой байна.
12. Төсөв, бизнес модель, хэрэглэгчийн сегмент, төлбөрийн бүтэц (QPay + Egeree гэрээ)
X-SENDER төслийн бизнес загвар нь үйлчилгээнийхээ ашиглалтаас оролмжтой орлого бий болгох, түүнчлэн урсгал зардлуудаа нөхөхөд чиглэсэн. Нэг талаас хэрэглэгчээс авах төлбөрийн бүтэц, нөгөө талаас гаргах зардлын тооцооллыг харгалзан төлөвлөгөө гаргав. Орлогын бүтэц: X-SENDER нь урьдчилсан төлбөрт (prepaid) зарчмаар ажиллана. Хэрэглэгч өөрийн дансанд мөнгөн дүнг цэнэглэж, түүнээсээ тайлан илгээх тутамд суутгуулдаг схемтэй. Тухайлбал:
1 тайлан илгээх үйлчилгээний үнэ = 5,000₮ байна. Энэ нь зах зээлийн нөхцөл, харьцуулах үйлчилгээний үнэ зэргээс тооцоолсон дундаж ханш.
Шинэ хэрэглэгч бүрт 3 удаагийн тайланг үнэ төлбөргүй илгээх эрх олгоно. Энэ нь бүтээгдэхүүнийг туршиж үзэх, итгэл төрүүлэх маркетингийн нэг хэсэг юм. 4 дэх тайлангаас эхлэн төлбөр шаардагдана.
Цэнэглэх дүнгийн доод хэмжээ = 50,000₮ байхаар тогтооно. Ингэснээр хэрэглэгч дор хаяж 10 тайлан илгээх кредиттэй болно. Хэт бага дүнгээр олон дахин гүйлгээ хийхээс сэргийлж байгаа хэрэг.
Төлбөрийн суваг: QPay интеграци ашиглах тул хэрэглэгч веб апп эсвэл чатботоос шууд QR код уншуулан төлөх боломжтой. QPay-ийн төлбөр манай компанийн дансанд орж, манай систем тэр дор нь хэрэглэгчийн X-SENDER акаунтын үлдэгдэлд нэмэх автоматжуулалт хийнэ.
Хэрэглэгчийн сегментчлэл: Энэхүү үнэ, бүтэц нь янз бүрийн төрлийн хэрэглэгчдэд хэрхэн хүрэхийг тооцсон. Гол гурван сегмент бий:
🟢 Шинэ хэрэглэгч: Системийг дөнгөж шинээр туршиж буй, бага хэмжээний тайлан илгээх хэрэгцээтэй жижиг ААН-үүд. Эдгээрт 3 тайлангийн эрхийг үнэгүй олгосноор ямар ч төлбөргүйгээр эхний 1-3 сар үйлчилгээг ашиглаж үзэх боломжийг өгнө. Энэ хугацаанд хэрэглэгч үйлчилгээний хялбар, найдвартайд итгэж, цаашид төлбөр төлөн ашиглах мотивацтай болно.
🔵 Ердийн (бүртгэлтэй) хэрэглэгч: Жирийн жижиг, дунд ААН-үүд. Эдгээр нь сар бүр тогтмол Х тайлан илгээх хэрэгтэй, өөр үйл ажиллагаа багатай компаниуд байна. Тэд QPay-ээр дансаа цэнэглээд, үлдэгдлээсээ тайлан илгээх бүрт 5,000₮-ийг хасуулна. Сар бүр 1 тайлан илгээдэг компани жилийн 12 удаагийн илгээлтэнд ~60,000₮ зарцуулах ба энэ нь маш бага зардлаар тайлангийн ажлаа шийдэж байгаа хэрэг болно.
🟡 Бизнесийн багц (accountant package): Нягтлан бодох үйлчилгээ эрхэлдэг, нэг хүн/багаас олон компаниудын тайланг нэг дор явуулдаг хэрэглэгчид. Жишээ нь 5 буюу түүнээс олон компанийн тайлан хариуцдаг нягтлангууд. Эдгээрт зориулсан тусгай багц, үнэ цэнийг Phase 3-д санал болгоно. Магадгүй сарын тогтмол төлбөрөөр хязгааргүй илгээх эрх, эсвэл тусгай хөнгөлөлт (жишээ нь 10 тайлан = 40,000₮ багц) зэргийг санал болгоно. Одоогоор MVP-д ийм багц шууд хэрэгжүүлэхгүй ч бизнесийн өсөлтөд энэ сегмент чухал.
Тайлангийн эрэлт, тоо: Монголын ихэнх жижиг компаниуд сар бүр дор хаяж 2 төрлийн татварын тайлан заавал илгээдэг: ААНОАТ (аж ахуйн нэгжийн орлогын албан татварын урьдчилсан буюу “Х” маягт) болон ХХОАТ (аж ахуйн нэгжүүдийн ажиллагсадын хувийн орлогын татварын тайлан). Зарим нь НӨАТ төлөгч бол улирал тутам нэмэгдээд явна. Дунджаар нэг жижиг ААН жилд ~12 тайлан илгээдэг гэж үзэж болно (идэвхгүй сараа Х тайлангаар, идэвхтэй сараа нормаль тайлангаар). Энэ нь X-SENDER-ийн нэг хэрэглэгчээс жилдээ ~60,000₮-ийн орлого олох боломжтойг харуулж байна (5,000₮ × 12). Зах зээлийн боломж, нийт орлого: Улсын хэмжээнд “Excel хэрэглэгч” гэж нэрлэгдсэн, тусгайлсан өндөр үнэтэй нягтлангийн ПО ашигладаггүй, тайлангаа гараараа хийдэг маш олон ААН байдаг. Тооцоогоор ~84,000 орчим ААН ийм байдалтай байж, хэрэв тэд жилд дунджаар 6 удаа X-SENDER ашиглавал жилдээ ~2.52 тэрбум ₮ төлөх хэмжээний зах зээл болж өгнө. Мөн үүнээс гадна өөр харьяалал, нөхцөлтэй ~100,000 орчим ААН жилд ~2 удаа ийм үйлчилгээ авах боломжтой гэж үзвэл нэмэлт ~1 тэрбум ₮ зах зээл бий. Нийтдээ X-SENDER бүрэн нэвтэрвэл жилийн 3.5 тэрбум төгрөгийн орлогын потенциал байна гэж урьдчилсан тооцоо гарсан. Хэдийгээр энэ бол 100% зах зээлийг хамрах онолын дээд боломж ч эхний жилд түүнээс тодорхой хувь хэмжээг эзлэх бодолтой (жишээ нь 5%-ийг эзэлбэл ~175 сая ₮/жил). Зардлын бүтэц: Үйлчилгээг явуулахад гарах үндсэн зардлуудыг мөн тооцсон. Үүнд: сервер, техник хангамжийн зардал, гүйлгээний шимтгэл, лиценз, гэрээний зардлууд орно.
Инфраструктурын зардал: X-SENDER нь cloud дээр ажиллах тул сар бүрийн Deployment зардалд Railway зэрэг платформын төлбөр орно – анхандаа үнэгүй эсвэл бага өртгөөр эхэлж, хэрэглэгч нэмэгдэхийн хэрээр $15–$50 орчим/сар болж өснө. PostgreSQL мэдээллийн сан эхний шатанд үнэгүй багтаамжид багтах ч (~1GB хүртэл), өсөх үед $10/сар орчим зардал гарна.
Автоматжуулалтын зардал: eTax-тай харилцах процесс API-р голчлон явах тул тусгай зардал бага. Хэрэв Puppeteer fallback ашиглавал headless Chrome ажиллуулах compute нөөцөд ~$50–$100/сар тооцсон. Ерөнхийдөө тайлан илгээх процесс тутамд хэдхэн секунд CPU ашиглах тул нэг зэрэг олон явсан ч дунджаар хямдхан. Queue/worker систем нэмэхэд ч том нэмэргүй.
Гүйлгээний шимтгэл: QPay-ийн төлбөрийн систем нь 1%–2.5% орчим шимтгэлийг гүйлгээ тутам авдаг. Жишээлбэл манай хэрэглэгч 50,000₮ цэнэглэхэд ~500–1,250₮ нь QPay талд шимтгэл болно. Үүнийг бид хэрэглэгчээс нэхэх үү, өөрсдөө хариуцах уу гэдгийг оновчтой шийдэх хэрэгтэй. Эхний үед олон жижиг гүйлгээтэй болохоор шимтгэлийн зардал багагүй хувийг эзэлж магадгүй. Магадгүй 50k цэнэглэхэд хэрэглэгчээс +1,000₮ нэмж авах байдлаар шийдэж болох юм.
Egeree цахим гэрээ: Хэрэв Phase 3-д тусгай гэрээ хийдэг функц нэвтрүүлбэл гэрээ байгуулах тутам 300–1,000₮ орчим зардал Egeree системд төлөхийг тооцсон. Энэ зардлыг хэрэглэгчээс шууд авах, эсвэл premium багцын үнэд шингээх зэргээр нөхнө.
Домэйн, бусад зардал: Домэйн нэр болон SSL гэрчилгээ жилдээ ~30,000₮ (жишээ нь .mn домэйн ~25k, SSL Let’s Encrypt үнэгүй, эсвэл enterprise сертификат авах бол нэмэлт) гэж үзсэн. Мөн аппликэйшний monitoring, логийн нэмэлт хэрэгслүүдэд (LogRocket гэх мэт) $0–$20/сар төсөвлөж болно.
Төсөл өсөн нэмэгдэхийн хэрээр дээрх зардлууд хэрэглээтэй шууд пропорциональ өснө. Тайлан илгээх давтамж, хэрэглэгчдийн тоо өсөхөд серверийн нөөц, гүйлгээний шимтгэл нэмэгдэнэ. Бид ашиг орлогын тооцооллыг хийхдээ conservative хандаж, эхний улиралд жишээлбэл Railway Pro ($20) + DB ($10) + Worker ($50) + 1000 гүйлгээний шимтгэл (~25k₮) нийлээд ~$80 орчим доллар буюу 280k₮/сар зардал гарахаар төлөвлөсөн. Үүнийг initial 50 хэрэглэгчээс олдох орлого (~250k₮/сар) бараг бүрэн нөхөхөөр байна. Цаашид хэрэглэгч нэмэгдэх тусам нэгжийн ашгийн хэмжээ өсөх бөгөөд scale хийхэд economy of scale бий болно гэж тооцож байна. Egeree гэрээний тал: Үйлчилгээ бүрэн хэмжээнд явах үед зарим хууль эрхзүйн зохицуулалт шаардлагатай. Хэрэглэгч X-SENDER-ийг ашиглахдаа өөрийн eTax нэвтрэх эрхээр гуравдагч програмд тайлан илгээнэ гэдгийг албан ёсоор зөвшөөрсөн байх ёстой. Үүнийг гэрээ (Terms of Service) байдлаар зөвшөөрүүлэхээс гадна, том байгууллагуудын хувьд тусгай хамтран ажиллах гэрээ байгуулах шаардлага гарч болно. Egeree.mn нь Монголд цахим гэрээ байгуулах боломжийг олгодог платформ бөгөөд Phase 3 үед үүнийг API-р холбож нэвтрүүлэхээр төлөвлөсөн. Ингэснээр:
Хэрэглэгч бүр анх бүртгүүлэхдээ X-SENDER үйлчилгээний нөхцөл, зөвшөөрлийг Egeree-ээр Цахим гарын үсэг зурж баталгаажуулна. (Жишээ нь, “X-SENDER-д өөрийн нэрээр татварын тайлан илгээлгэхийг зөвшөөрч байна” гэх утгатай гэрээ)
Томоохон байгууллагатай хамтран ажиллах бол тусад нь хоёр талын гэрээг Egeree-р байгуулаад API-аар баталгаажуулж болно.
Энэ процесс нь хэрэглэгчдэд нэмэлт итгэл төрүүлэх, мөн хууль эрхзүйн эрсдэлээс компанийг хамгаалах давуу талтай. Egeree интеграцийн зардлыг дээр дурдсанчлан гэрээ тутам 300–1000₮ гэж үзэхэд, олон хэрэглэгчтэй болох үед бодолцох чухал хүчин зүйл мөн. Шийдэх арга зам нь premium багц эсвэл эхний бүртгэл хийхэд нэг удаа жижиг хураамж авч гэрээний зардлыг нөхөх байж болно. Бизнес модель цаашдын өргөжилт: Эхний үндсэн орлогын горимоос гадна дараах нэмэлт боломжуудыг судална: Premium гишүүнчлэл (дээр дурдсан багц үйлчилгээ, нэмэлт функцтэй); бусад санхүүгийн программтай API-ээр холбогдох (том нягтлангийн газрууд манай шийдлийг өөрийн системдээ нэгтгэх бол ашиг төлөх загвар); олон компанийн групп, нягтлангийн товчоо зэрэгт байгууллагын гэрээ хэлбэрээр хямдралтай, бөөний үнээр нийлүүлэх; дагалдах нэмэлт үйлчилгээ (SMS сануулга, зөвлөх үйлчилгээ, дата анализ) зэргийг санал болгох. Энэ бүхэн нь Phase 3 ба түүнээс хойшхи өсөлтийн стратегид хамаарна.
13. DevOps, deployment, CI/CD, backup, мониторинг шийдэл
Тогтвортой, давтамжтай хөгжилтийг хангахын тулд DevOps ба байршуулалтын дараах шийдлүүдийг ашиглана:
Deployment (орчны байршуулалт): Гол компонентүүдийг Railway зэрэг PaaS (Platform as a Service) дээр байршуулна. Facebook Bot, Backend API, Scheduler worker зэрэг бүх сервисүүд Railway-ийн тусдаа instance-үүд болон container-үүд дээр ажиллана. Railway-г сонгосноор автоматаар scale хийх, environment variable менежмент, үүлэнд найдвартай ажиллах давуу талтай. Өөр хувилбараар Docker Compose ашиглан AWS EC2, DigitalOcean Droplet дээр байршуулж болох ч MVP үед хурдан болгох үүднээс Railway-гийн free/pro plan-уудыг ашиглах юм.
Source Control & CI: Бүх эх кодыг GitHub дээр хувилбарын удирдлагад байлгана. GitFlow зарчмаар салбаруудыг зохион байгуулж (main, develop, feature/* гэх мэт) ажиллана. Main/master салбар руу push хийх бүрт CI/CD дамжлага автоматаар эхэлнэ. Тухайлбал, GitHub Actions эсвэл Railway-ийн built-in CI/CD-ийг ашиглан тестүүдийг ажиллуулж, build хийж, алдаагүй бол шууд production орчинд байршуулдаг горимтой. Энэ нь шинэ өөрчлөлтүүдийг маш хурднаар хэрэглээнд гаргах, багийн олон гишүүн хамтран ажиллахад ч саадгүй болгоно.
Авто Deploy: Дээрх CI/CD-ийн хүрээнд continuous deployment зарчмыг хэрэгжүүлнэ. Кодын main санд ямар нэг шинэ commit ормогц Railway автоматаар тэрийг татаж, шаардлагатай dependency-ийг суулгаж, сервисийг дахин ачаалж байршуулна. Ингэхдээ тасралтгүй үйлчилгээг хангах үүднээс ачаалал тэнцвэржүүлэгч эсвэл zero-downtime deploy аргыг (blue-green deployment гэх мэт) хэрэглэнэ. Гол нь хөгжүүлэгчдэд deploy хийх гэж гараар оролцох ажлыг арилгаж, алдаа багатай хурдтай release хийх зорилготой.
Monitoring (хяналт): Системийн эрүүл байдлыг хянахын тулд Railway-ийн өөрийн Monitoring самбарыг ашиглахын зэрэгцээ хэрэгцээт тохиолдолд тусгай логийн үйлчилгээ нэмнэ. Railway нь CPU, RAM ашиглалт, instance restarts зэрэг энгийн үзүүлэлтүүдийг харуулдаг. Гэвч бидэнд илүү нарийвчилсан application-level мониторинг хэрэгтэй. Үүний тулд Datadog, NewRelic, Sentry, LogRocket гэх мэт хэрэгслүүдээс сонгоно. Жишээ нь Sentry-г нэмээд алдааны stack trace-үүдийг real-time авч болно, эсвэл LogRocket-ийг UI бичлэг хянахад. Одоохондоо төлөвлөгөөний дагуу Railway logging add-on болон LogRocket зэргийг сонголтоор төсөөлсөн (сард $0–$20). Түүнчлэн серверт custom лог viewer хийсэн ч болно. Энэхүү мониторинг нь алдааг түргэн олж засах, систем ачаалал хэтэрч буйг урьдчилан мэдэх, хэрэглэгчдийн хэрэглээний хэв маягийг ажиглахад чухал.
Backup & Recovery: PostgreSQL мэдээллийн санг өдөр бүр автоматаар нөөцлөнө. Railway platform нь database backup хийх боломжийг өгдөг (харгалзах тохиргоог нь идэвхжүүлж, тодорхой цагт snapshot авах). Ингээд энэ нөөц файлыг аюулгүй хадгалах хэрэгтэй – Railway өөрөө тодорхой хугацаанд хадгалах ч бид давхар өөр газар (жишээ нь AWS S3) хуулах automation хийнэ. Мөн critical дата (жишээ нь тайлангийн түүх г.м)-г бодит цагийн replication хэлбэрээр 2 дахь баазад хадгалах ч боломжийг судалж байна. Backup-аа ашиглан сэргээх drill-ийг тогтмол (сард/уларал тутам) хийж, өгөгдөл гэмтсэн нөхцөлд хэр хурдан сэргээж болохыг шалгана. Цаашид хэрэглэгч олшроход 12 цаг тутам нөөцлөх хувилбар луу шилжиж ч магадгүй.
Scalability (Масштаблалт): Ачаалал нэмэгдэхийг Phase 2-д онцгой тооцсон. DevOps талаас үзвэл, Railway-ийн service-үүдийг horizonal scale хийх буюу worker instance-н тоог нэмэх байдлаар зохицуулна. Жишээ нь, тайлан илгээх оргил өдөр 400k хүсэлт ирэх боломжтой гэж үзвэл (шөвгийн өдөр гэх мэт) нэг worker 3-5 секэд нэг тайлан явуулдаг бол 5-20 worker зэрэг ажиллуулах шаардлагатай. Энэ тохиолдолд Kubernetes зэрэг рүү шилжихийг ч үгүйсгэхгүй, гэхдээ эхний ээлжинд Railway plan-аа ахиулан multiple instance feature-ыг ашиглах боломжтой. Мөн Facebook webhook хүлээн авах серверээ scale хийх (өөр instance гаргах) шаардлага гарч магадгүй. Бид эдгээрийг урьдчилан загварчилж, ачаалал их үед гарч болзошгүй давтамжтай үйлдлүүдийг (Scheduler, bulk retry гэх мэт) тусад нь worker service болгож хуваахад бэлэн байна.
Development/Staging орчин: Үндсэн production орчноос гадна хөгжүүлэлтийн туршилт хийх staging орчин ажиллуулна. Тухайлбал, st-etax.mta.mn (татварын тест орчин) ханддаг, sandbox QPay ашигладаг, өөр бот (тест группт холбогдсон) бүхий хувилбарыг Railway дээр тусад нь байлгаж, шинэ функц, өөрчлөлтийг тэнд эхлээд deploy хийж шалгана. Энэ нь production-д шууд нөлөөлөхөөс сэргийлнэ.
Нэмэлтээр, DevOps хэсэгт контейнеризаци зайлшгүй хэрэгжүүлнэ. Бүх сервис (бот, backend, worker) нь Docker image байдлаар бүтээж, lokaal болон клауд хаана ч ажиллах боломжтой байна. CI процессд Docker build, push-ийг автоматаар хийж, Kubernetes зэрэг орчин руу шилжих үндсийг тавьсан байна. Эцэст нь, тасралтгүй хүргэлтийн энэ загвар нь хөгжүүлэлтийн багт эрчимтэй, итгэлтэй deploy хийх нөхцөл бүрдүүлж, хэрэглэгчдэд ч шинэ сайжруулалтыг тасалдалгүй хүргэх давуу талтай. DevOps-ийн төлөвлөгөө ийнхүү найдвартай ажиллагааг дэмжих гол тулгуур болж өгнө.
14. Брэндинг, tagline, UI хэлбэр, favicon, chatbot icon
X-SENDER үндсэн лого – “X” үсгийг дижитал алгоритмыг илтгэх цэнхэр өнгийн элементүүдээр бүтээж, “SENDER” хэсгийг тогтвортой байдлыг илэрхийлэх бүдүүн фонтоор дүрсэлсэн хувилбар. Нэр, брэндийн тусгал: Төслийн албан ёсны нэр нь X-SENDER бөгөөд энэ нь “X тайлан илгээх”-тэй шууд ассоциаци үүсгэх нэршил юм. Латинаар бичигдэхдээ ойлгомжтой, товч бөгөөд технологийн бүтээгдэхүүн шиг сонсогдох давуу талтай. Уриа үгийн хувьд хэд хэдэн санаа гаргасан ба хамгийн таалагдсан нь “Тайланг март, X-SENDER-ийг ажиллуул” гэсэн хувилбар юм. Энэ нь бүтээгдэхүүний гол үнэт зүйл болох тайлангийн ажлаа автоматжуулж мартах, санаа амар байх боломжийг онцолж байна. Мөн “X тайланг автоматаар, алдаагүй” гэх энгийн тайлбар уриаг давхар ашиглаж болно. Лого дизайн: X-SENDER-ийн лого нь текст ба дүрсээс бүрдэнэ. Үндсэн логонд “X” тэмдэгийг технологийн мэдрэмжтэй харагдуулах үүднээс долгионтой, пиксел эсвэл алгоритмыг илэрхийлсэн элементүүдээр дүрслэх санаа гаргасан. “SENDER” гэсэн үгийг үсгийн SHIFT төрлийн бөөрөнхий булантай, зузаан фонт ашиглан бичсэн. Ингэснээр “X” хэсэг нь ухаалаг, автомат ажиллагааг илтгэж, “SENDER” нь найдвартай, бат бөх үйлчилгээг илтгэх дизайны шийдэл болсон. Логоны хоёр хэсгийг өнгөөр бага зэрэг ялгаж өгч болно (жишээ нь X-ийг хөх, SENDER-г бараан саарал гэх мэт). Мөн дүрс лого буюу icon хувилбарт зөвхөн "X" үсгийг standalone тэмдэг болгон ашиглах бөгөөд энэ нь chatbot-ын хөрөг зураг, мобиль апп товч тэмдэг, favicon зэрэгт хэрэглэгдэнэ. "X" дүрс нь танилцахуйц, жижиг размерт ч ойлгомжтой байхыг хичээнэ. Логоны хар, цагаан фон дээрх хувилбарууд (negative/positive) мөн боловсруулсан. Өнгөний палитр: Брэндийн үндсэн өнгө нь цэнхэр (#2563EB) байна – энэ нь итгэлцэл, мэргэжлийн байдлыг илэрхийлдэг. Хүний нүдэнд тайван, технологийн бүтээгдэхүүнд түгээмэл ашиглагддаг өнгө. Дагалдах өнгө нь ногоон (#10B981) – автоматжуулалт, амжилтыг бэлгэдэх тод сэргээш өнгө. Үүнийг зарим онцлох элемент (жишээ нь “амжилттай” төлөв, эсвэл CTA товч) дээр хэрэглэнэ. Текст, үндсэн фонтуудын хувьд саарал-харанхувтар өнгө (#111827), цагаан фон (#F9FAFB) ашиглана. Энэ нь уншихад тод харагдах бөгөөд цэвэр интерфейс бүрдүүлнэ. Ерөнхийдөө хэтэрхий олон өнгө ашиглахгүй, цэнхэр, ногоон, саарал, цагааны нийлэмжээр минимал хэв маяг баримтална. Фонт, дүрслэл: Үндсэн бичгийн фонт бол Inter гэх вебд ээлтэй, орчин үеийн хөрвөх чадвартай фонт байна. Inter нь Монгол кирилл үсэгтэй хувилбартай, UX-д маш түгээмэл хэрэглэгддэг давуу талтай. Backup хувилбараар Arial, санс-сериф төрлийн фонтыг заана. Толгой гарчигууд тод хар, үндсэн текст бага зэрэг сааралдуу өнгөтэй байж, уншихад хялбар байдлыг хангана. Иконography тал дээр Material Design эсвэл FontAwesome-н энгийн шугаман дүрсүүдийг ашиглаж, хэрэглэгчдэд танил, ойлгомжтой дүрслэлийг өгнө. Favicon & chatbot icon: Фавикон болон chatbot-д ашиглах profile зурагт “X” тэмдэгт үндсэн элемент болно. 32x32 пиксел болон вектор SVG хувилбараар бэлдэнэ. Цэнхэр дэвсгэр дээр цагаан "X" эсвэл эсрэгээр нь цагаан дэвсгэр дээр цэнхэр "X" гэсэн хоёр хувилбар гаргаж, хар болон цайвар theme-үүдэд тааруулан хэрэглэнэ. Chatbot-ын хувьд Facebook дээр дугуй icon болж харагдах тул "X" тэмдэг төвөггүй танигдах хэмжээгээр хүрээг нь тохируулсан (spaced) байхыг анхаарна. UI хэв маяг: Хэрэглэгчийн интерфейс (веб, мобайл веб) нь дээрх өнгө, фонтыг хэрэгжүүлж, цэлгэр зайтай, цэвэр дизайны зарчмыг баримтална. Tailwind CSS эсвэл өөр UI framework дээр custom theme-ээ тохируулж хөгжинө. Алдааны мэдэгдэл, амжилтын мэдээлэл зэрэгт брэндийн ногоон, улаан өнгийг зохицуулж, бүх дүрслэлд нэг ижил икон/өнгөний утга агуулгыг барина (Consistency). Брэнд хэрэглээний байршлууд: X-SENDER брэндийг хэрэглэгчидтэй харьцах бүх цэг дээр нэг ижил төрхтэй харагдуулахаар зорьж байна. Тухайлбал: веб апп болон лендинг дээрх толгой хэсэг, хөл хэсэгт логог зөв хэмжээсээр байрлуулах; Facebook chatbot-ын профайл зураг, нэр (X-SENDER гэх мэт) нь тодорхой брэндийг илтгэх; QPay төлбөрийн цонхонд манай логог харуулах (банкны апп-д QR уншуулахад "Invoice from X-SENDER" гэх мэт текст гардаг байдлаар); цаашлаад Discord зэрэг сувгаар support үзүүлбэл мөн л ижил logo/name ашиглах; эцэст нь, eTax автоматжуулалтын UI буюу манай системээс eTax руу холбогдох хэсэгт ч (хэрэглэгчийн нүдэнд шууд харагдахгүй ч) манай identity тодорхой байх гэх зэрэг. Брэндингийн эцсийн бүтээгдэхүүн болгож brand guideline баримт бичиг гаргах ба түүнд лого ашиглах дүрэм, өнгөний код, фонтын хэмжээ, пропорц, хориглох зүйлс (логог сунгах, буруу өнгөөр хэрэглэх г.м) зэргийг тусгана. Ингэснээр X-SENDER цаашид нэмэх бусад материал (сурталчилгааны зураг, видео г.м) дээр ч нэг ижил имиджтэй байх нөхцөл бүрдэнэ.
15. Хуулийн нөхцөлүүд (Privacy Policy, Terms of Service, eTax credential handling)
X-SENDER үйлчилгээ нь хэрэглэгчийн татварын нууцтай холбоотой мэдээллийг авч, түүгээр үйлдэл хийх тул хууль, бодлогын нөхцөлүүдийг тодорхой бүрдүүлэх шаардлагатай. Үүнд: хэрэглэгчийн мэдээллийн нууцлал, үйлчилгээний нөхцөл, гуравдагч талын дата ашиглалт, алдааны хариуцлагын заалтууд багтана. Гол баримт бичгүүд ба зарчмууд:
Privacy Policy (Нууцлалын бодлого): Бид хэрэглэгчийн хувийн мэдээлэл, компанийн мэдээлэл, татварын тайлангийн дата зэргийг хэрхэн цуглуулж, хадгалж, ашиглахыг тодорхой заасан албан ёсны бодлоготой байна. Үүнд: X-SENDER нь хэрэглэгчийн өгөгдлийг ямар нэг гуравдагч талд худалдахгүй, шилжүүлэхгүй; зөвхөн энэхүү тайлан илгээх үйлчилгээг үзүүлэх зорилгоор л ашиглана гэдгийг онцлон тусгана. Мөн хэрэглэгчийн харилцан яриа (Messenger чат) нь Facebook-ийн шифрлэлтийн хүрээнд явагдах ба бид өөр сувгаар задруулаагүйг тайлбарлана. Хэрэглэгчийн eTax нэвтрэх мэдээллийг хэрхэн хадгалах (эсвэл хадгалахгүй) талаар дэлгэрэнгүй оруулна – жишээ нь: “Таны eTax-н нууц үгийг X-SENDER огт хадгалахгүй, зөвхөн таны зөвшөөрлөөр тухайн сешнд ашигладаг” гэх мэт. Хэрэв зарим мэдээллийг хадгалах зайлшгүй шаардлага байвал (жишээ нь токен) түүнийг шифрлэн хадгалж байгаа талаар дурдаж, техник арга хэмжээг тайлбарлана. Нууцлалын бодлогод мөн хэрэглэгч өөрийн датаг хянуулах, засуулах, устгуулах эрхтэйг (Монгол улсын хувийн мэдээллийн тухай хууль, GDPR жишгийг дагаж) тусгана.
Terms of Service (Үйлчилгээний нөхцөл): Энэ нь X-SENDER үйлчилгээг ашиглахдаа хэрэглэгч ямар нөхцөл, үүргийг хүлээх, мөн манай компани ямар үүрэг, хариуцлага хүлээхийг зохицуулсан гэрээний нөхцөл юм. Тухайлбал: хэрэглэгч өөрийн eTax системийн нэвтрэх эрхийн нууцлалыг хадгалах үүрэгтэй, хэрэв гуравдагч этгээдэд алдсанаас үүдэлтэй хохирлыг X-SENDER хариуцахгүй гэх мэт заалтууд орно. Мөн хэрэглэгч X-SENDER-ээр дамжуулан тайлангаа илгээх зөвшөөрлийг бидэнд олгож байгааг, үүнтэй холбоотой итгэмжлэл маягийн зохицуулалтыг (манайд хандсан гэж үзэх) хүлээн зөвшөөрч байгааг тусгана. Жишээ нь: “Хэрэглэгч нь өөрийн татварын тайланг X-SENDER системд итгэн даалгаж, түүний өмнөөс цахимаар ТЕГ-т илгээхийг зөвшөөрөв” гэх мэт. Terms of Service-д мөн хариуцлагын хязгаарлалтыг оруулах нь чухал: манай систем алдаагүй үйлдэхийг зорино, гэхдээ зарим нөхцөлд (жишээ нь татварын системийн талын алдаа, эсвэл хэрэглэгчээс буруу мэдээлэл оруулсан) гарах үр дагаварт X-SENDER хуулийн хариуцлага хүлээхгүй, зөвхөн техник үйлчилгээ үзүүлэгч гэдгийг明確лан заана. Энэ нь хэрэглэгчийг буруутгах гэсэн үг биш, зүгээр л тухайн татварын мэдээллийн үнэн зөв байдал нь хэрэглэгчийн хариуцлагад хэвээр байх ёстойг тодотгоно.
eTax Credential Handling: Хэрэглэгчийн татварын системийн нэвтрэх нэр, нууц үг зэрэг credentials-ийг авч ашиглах нь маш эмзэг асуудал. Үүнийг шийдэхийн тулд хэд хэдэн давхар арга хэмжээ авч байгааг дээр дурдсан. Хууль, нөхцлийн талаас: хэрэглэгч манайд энэ мэдээллээ өгөхдөө өөрөө зөвшөөрч байгаа ба бид уг мэдээллийг хамгаалах бүх арга хэмжээг авна гэдгийг Privacy Policy, TOS хоёуланд нь дурдана. Тухайлбал: “X-SENDER нь хэрэглэгчийн eTax-ийн нэвтрэх эрхийг зөвхөн танд үйлчилгээ үзүүлэх зорилгоор ашиглах бөгөөд дундын хадгалалт хийхгүй, хамгаалалтын програм хангамжаар шифрлэн хадгалдаг. Аливаа халдлага илэрсэн нөхцөлд даруй мэдэгдэж, арга хэмжээ авна” гэх мэт. Мөн хэрэглэгч өөрийн эрхээ бусдад дамжуулахгүй байх, манай системийг зөвхөн хууль ёсны зорилгоор ашиглах (өөр нэгний татварын мэдээллийг зөвшөөрөлгүй оруулахгүй байх) зэрэг тал дээр ч зааж өгнө. Үүнийг баталгаажуулах үүднээс шаардлагатай тохиолдолд хэрэглэгчээр тусгай цахим гэрээ/зөвшөөрөл зуруулахыг (Egeree ашиглан) TOS-ийн нэг хэсэг болгож болно.
Хамтын ажиллагаа, зөвшөөрөл: X-SENDER нь татварын байгууллагын албан ёсны API ашиглаж байгаа тул магадгүй цаашид ТЕГ-тай тусгай гэрээ, зөвшөөрөл байгуулсан байх шаардлага ургана. Энэ тал дээр төслийн баг аль аль хувилбарт бэлэн: хэрэв албан гэрээ хийх шаардлагатай бол хийж, хэрэглэгчийн өгөгдлийг татварын хууль журмын хүрээнд ашиглах зөвшөөрлийг авна. Ингэснээр хууль зүйн хувьд “гуравдагч талын програм ашиглан тайлан илгээх” гэдэг нь албаны хэмжээнд ч хүлээн зөвшөөрөгдсөн процесс байх юм.
Хэрэглэгчдийн эрх ашгийг хамгаалах үүднээс манай үйлчилгээний нөхцөл, нууцлалын бодлого нь ойлгомжтой хэлээр бичигдсэн, ил тод байх болно. Лендинг веб дээр олон нийтэд үзэгдэхээр байршуулж, хэрэглэгч бүр бүртгүүлэх үедээ зөвшөөрч буйг тэмдэглэх (checkbox) шаардана. Мөн Phase 3-д дурдсан Egeree цахим гарын үсэг-ийн шийдлийг хэрэгжүүлснээр хэрэглэгч үнэхээр манай нөхцөлтэй танилцаж, зөвшөөрсөн баталгаа үүснэ. Эцэст нь, хууль эрхзүйн эдгээр заалтууд нь бидний үйлчилгээ үзүүлэх хүрээ хязгаарыг тодорхой болгож, хэрэглэгч болон бид хоёрын хоорондын итгэлийг баталгаажуулах чухал үндэс болно. Албан нөхцөл, бодлогын баримт бичгүүдийг хуульчийн хяналтад боловсруулж, холбогдох дүрэм журмуудад нийцүүлж байхаар төлөвлөсөн. Эх сурвалжууд: Монгол улсын Татварын ерөнхий газрын eTax API гарын авлага, ManyChat интеграцийн баримт бичиг, QPay төлбөрийн API-ийн заавар, Egeree.mn үйлчилгээний танилцуулга зэргээс гадна төслийн дотоод судалгааны материалууд. Энэхүү төлөвлөгөөнд тусгагдсан шийдэл бүр дээр эх сурвалжуудад тулгуурлан ажиллаж, цаашид хэрэгжүүлэх болно.